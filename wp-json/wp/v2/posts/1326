{"id":1326,"date":"2017-01-22T13:26:16","date_gmt":"2017-01-22T13:26:16","guid":{"rendered":"https:\/\/jacekjeznach.com\/?p=1326"},"modified":"2017-01-22T14:04:55","modified_gmt":"2017-01-22T14:04:55","slug":"first-steps-with-gulp-js","status":"publish","type":"post","link":"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/","title":{"rendered":"First steps with Gulp.js"},"content":{"rendered":"<p class=\"wp-special\">Front end front end developers spend little time coding. Even if we ignore meetings, much of the job involves basic tasks your working day:<\/p>\n<div class=\"ArticleBox u-inline\">Tasks must be repeated every time you make a change. You begin with good intentions but the infallible front end developer will forget to compress an image or two. Over time, tasks become increasingly arduous and time-consuming; you\u2019ll dread the inevitable content and template changes. It\u2019s mind-numbing, repetitive work. Would it be better to spend your time on more profitable jobs?<\/div>\n<p>If so, you need a <em>task runner.<\/em><\/p>\n<h2 id=\"thatsoundsscarilycomplicated\">That Sounds Complicated!<\/h2>\n<p>Creating a build process will take time. It\u2019s more complex than performing each task manually but, in long-term, you will save hours of effort, reduce human error and save your sanity. Adopt a pragmatic approach:<\/p>\n<ul>\n<li>automate the most irritating tasks first<\/li>\n<li>try not to over-complicate your build process; an hour or two is more than enough for the initial set-up<\/li>\n<li>choose task runner software and stick with it for a while.<\/li>\n<\/ul>\n<p>Part of the tools may be new to you but take a deep breath and concentrate on one thing at a time.<\/p>\n<h2 id=\"taskrunnerstheoptions\">Task Runners: Gulp<\/h2>\n<p>Many issues were addressed in later editions but <a href=\"http:\/\/gulpjs.com\/\">Gulp<\/a> had already arrived and offered a number of improvements:<\/p>\n<ol>\n<li>Features such as file watching were built-in.<\/li>\n<li>Gulp plug-ins were <em>(mostly)<\/em> designed to do a single job.<\/li>\n<li>Gulp used JavaScript configuration code which was less verbose, easier to read, simpler to modify, and provided better flexibility.<\/li>\n<li>Gulp was faster because it uses <a href=\"https:\/\/www.sitepoint.com\/basics-node-js-streams\/\">Node.js streams<\/a> to pass data through a series of piped plug-ins. Files were only written at the end of the task.<\/li>\n<\/ol>\n<p>Of course, Gulp itself isn\u2019t perfect and new task runners such as <a href=\"http:\/\/broccolijs.com\/\">Broccoli.js<\/a>, <a href=\"http:\/\/brunch.io\/\">Brunch<\/a> and <a href=\"https:\/\/webpack.github.io\/\">webpack<\/a> have also been competing for front end developer attention. More recently, <a href=\"https:\/\/www.sitepoint.com\/guide-to-npm-as-a-build-tool\/\">npm itself has been touted as a simpler option<\/a>. All have their pros and cons, but <a href=\"https:\/\/ashleynolan.co.uk\/blog\/frontend-tooling-survey-2016-results#js-task-runners\">Gulp remains the favorite and is currently used by more than 40% of web developers<\/a>.<\/p>\n<p>Gulp needs Node.js but, while Part JavaScript knowledge is beneficial, front end developers from all web programming faiths will find it useful.<\/p>\n<p>This guidedescribes how to use Gulp 3 \u2013 the most recent release version at the time of writing. Gulp 4 has been in development for Part time but remains a beta product. It\u2019s possible to <a href=\"https:\/\/www.joezimjs.com\/javascript\/complete-guide-upgrading-gulp-4\/\">use or switch to Gulp 4<\/a> but I recommend sticking with version 3 until the final release.<\/p>\n<h2 id=\"step1installnodejs\">Step 1: Node.js<\/h2>\n<p>Node.js can be downloaded for Windows, Mac and Linux from <a href=\"https:\/\/nodejs.org\/download\/\">nodejs.org\/download\/<\/a>. There are different options for installing from binaries, package managers and docker images \u2013 full instructions are available.<\/p>\n<p><strong>Note for Windows users:<\/strong> Node.js and Gulp run on Windows but some plug-ins may not install or run if they depend on native Linux binaries such as image compression libraries. One option for Windows 10 users is the new <a href=\"https:\/\/msdn.microsoft.com\/en-us\/commandline\/wsl\/install_guide\">bash command-line<\/a>; this solves many issues but is a beta product and could introduce alternative problems.<\/p>\n<p>Once installed, open a command prompt and enter:<\/p>\n<pre class=\" language-bash\"><code class=\"bash language-bash\">node -v\r\n<\/code><\/pre>\n<p>to reveal the version number. You\u2019re about to make heavy use of <code class=\" language-undefined\">npm<\/code> \u2013 the Node.js package manager which is used to install modules. Examine its version number:<\/p>\n<pre class=\" language-bash\"><code class=\"bash language-bash\">npm -v\r\n<\/code><\/pre>\n<p><strong>Note for Linux users:<\/strong> Node.js modules can be installed globally so they are available throughout your system. However, most users will not have permission to write to the global directories unless <code class=\" language-undefined\">npm<\/code> commands are prefixed with <code class=\" language-undefined\">sudo<\/code>. There are a number of <a href=\"https:\/\/docs.npmjs.com\/getting-started\/fixing-npm-permissions\">options to fix npm permissions<\/a> and tools such as <a href=\"https:\/\/www.sitepoint.com\/quick-tip-multiple-versions-node-nvm\/\">nvm can help<\/a> but I often change the default directory, e.g. on Ubuntu\/Debian-based platforms:<\/p>\n<pre class=\" language-bash\"><code class=\"bash language-bash\"><span class=\"token function\">cd<\/span> ~\r\n<span class=\"token function\">mkdir<\/span> .node_modules_global\r\nnpm config <span class=\"token keyword\">set<\/span> prefix<span class=\"token operator\">=<\/span><span class=\"token variable\">$HOME<\/span>\/.node_modules_global\r\nnpm <span class=\"token function\">install<\/span> npm -g\r\n<\/code><\/pre>\n<p>Then add the following line to the end of <code class=\" language-undefined\">~\/.bashrc<\/code>:<\/p>\n<pre class=\" language-bash\"><code class=\"bash language-bash\"><span class=\"token function\">export<\/span> PATH<span class=\"token operator\">=<\/span><span class=\"token string\">\"<span class=\"token variable\">$HOME<\/span>\/.node_modules_global\/bin:<span class=\"token variable\">$PATH<\/span>\"<\/span>\r\n<\/code><\/pre>\n<p>and update with:<\/p>\n<pre class=\" language-bash\"><code class=\"bash language-bash\"><span class=\"token function\">source<\/span> ~\/.bashrc\r\n<\/code><\/pre>\n<h2 id=\"step2installgulpglobally\">Step 2: Install Gulp Globally<\/h2>\n<p>Install Gulp command-line interface globally so the <code class=\" language-undefined\">gulp<\/code> command can be run from any project folder:<\/p>\n<pre class=\" language-bash\"><code class=\"bash language-bash\">npm <span class=\"token function\">install<\/span> gulp-cli -g\r\n<\/code><\/pre>\n<p>Verify Gulp has installed with:<\/p>\n<pre class=\" language-bash\"><code class=\"bash language-bash\">gulp -v\r\n<\/code><\/pre>\n<h2 id=\"step3configureyourproject\">Step 3: Configure Your Bulid<\/h2>\n<p><strong>Note for Node.js projects:<\/strong> you can skip this step if you already have a <code class=\" language-undefined\">package.json<\/code> configuration file.<\/p>\n<p>Presume you have a new or pre-existing project in the folder <code class=\" language-undefined\">project1<\/code>. Navigate to this folder and initialize it with npm:<\/p>\n<pre class=\" language-bash\"><code class=\"bash language-bash\"><span class=\"token function\">cd<\/span> project1\r\nnpm init\r\n<\/code><\/pre>\n<p>You will be asked a series of questions \u2013 enter a value or hit <strong>Return<\/strong> to accept defaults. A <code class=\" language-undefined\">package.json<\/code> file will be created on completion which stores your <code class=\" language-undefined\">npm<\/code> configuration settings.<\/p>\n<p>For the remainder of this article we\u2019ll presume your project folder contains the following sub-folders:<\/p>\n<h3 id=\"srcfolderpreprocessedsourcefiles\"><code class=\" language-undefined\">src<\/code> folder: pre-processed source files<\/h3>\n<p>This contains further sub-folders:<\/p>\n<ul>\n<li><code class=\" language-undefined\">html<\/code> \u2013 HTML source files<\/li>\n<li><code class=\" language-undefined\">images<\/code> \u2014 the original uncompressed images<\/li>\n<li><code class=\" language-undefined\">js<\/code> \u2014 multiple pre-processed script files<\/li>\n<li><code class=\" language-undefined\">scss<\/code> \u2014 multiple pre-processed Sass <code class=\" language-undefined\">.scss<\/code> files<\/li>\n<\/ul>\n<h3 id=\"buildfoldercompiledprocessedfiles\"><code class=\" language-undefined\">build<\/code> folder: compiled\/processed files<\/h3>\n<p>Gulp will create files and create sub-folders as necessary:<\/p>\n<ul>\n<li><code class=\" language-undefined\">html<\/code> \u2013 compiled static HTML files<\/li>\n<li><code class=\" language-undefined\">images<\/code> \u2014 compressed images<\/li>\n<li><code class=\" language-undefined\">js<\/code> \u2014 a single concatenated and minified JavaScript file<\/li>\n<li><code class=\" language-undefined\">css<\/code> \u2014 a single compiled and minified CSS file<\/li>\n<\/ul>\n<p>Your project will almost certainly be different but this structure is used for the examples below.<\/p>\n<p>Tip: If you\u2019re on a Unix-based system and you just want to follow along with the tutorial, you can recreate the folder structure with the following command:<\/p>\n<pre class=\" language-bash\"><code class=\"bash language-bash\"><span class=\"token function\">mkdir<\/span> -p src\/<span class=\"token punctuation\">{<\/span>html,images,js,scss<span class=\"token punctuation\">}<\/span> build\/<span class=\"token punctuation\">{<\/span>html,images,js,css<span class=\"token punctuation\">}<\/span>\r\n<\/code><\/pre>\n<h2 id=\"step4installgulplocally\">Step 3a: Install Gulp<\/h2>\n<p>You can now install Gulp in your project folder using the command:<\/p>\n<pre class=\" language-bash\"><code class=\"bash language-bash\">npm <span class=\"token function\">install<\/span> gulp --save-dev\r\n<\/code><\/pre>\n<p>This installs Gulp as a development dependency and the <code class=\" language-undefined\">\"devDependencies\"<\/code> section of <code class=\" language-undefined\">package.json<\/code> is updated accordingly.<\/p>\n<h3 id=\"alternativedeploymentoptions\"><\/h3>\n<h2 id=\"step4createagulpconfigurationfile\">Step 4: Create a Gulpfile.js<\/h2>\n<p>Create a new <code class=\" language-undefined\">gulpfile.js<\/code> configuration file in the root of your project folder. Add some basic code to get begined:<\/p>\n<pre class=\" language-javascript\"><code class=\"javascript language-javascript\"><span class=\"token comment\" spellcheck=\"true\">\/\/ Gulp.js configuration<\/span>\r\n<span class=\"token keyword\">var<\/span>\r\n  <span class=\"token comment\" spellcheck=\"true\">\/\/ modules<\/span>\r\n  gulp <span class=\"token operator\">=<\/span> <span class=\"token function\">require<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'gulp'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">,<\/span>\r\n\r\n  <span class=\"token comment\" spellcheck=\"true\">\/\/ development mode?<\/span>\r\n  devBuild <span class=\"token operator\">=<\/span> <span class=\"token punctuation\">(<\/span>process<span class=\"token punctuation\">.<\/span>env<span class=\"token punctuation\">.<\/span>NODE_ENV <span class=\"token operator\">!==<\/span> <span class=\"token string\">'production'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">,<\/span>\r\n\r\n  <span class=\"token comment\" spellcheck=\"true\">\/\/ folders<\/span>\r\n  folder <span class=\"token operator\">=<\/span> <span class=\"token punctuation\">{<\/span>\r\n    src<span class=\"token punctuation\">:<\/span> <span class=\"token string\">'src\/'<\/span><span class=\"token punctuation\">,<\/span>\r\n    build<span class=\"token punctuation\">:<\/span> <span class=\"token string\">'build\/'<\/span>\r\n  <span class=\"token punctuation\">}<\/span>\r\n<span class=\"token punctuation\">;<\/span>\r\n<\/code><\/pre>\n<p>This references the Gulp module, sets a <code class=\" language-undefined\">devBuild<\/code> variable to <code class=\" language-undefined\">true<\/code> when running in development (or non-production mode) and defines the source and build folder locations.<\/p>\n<p>&nbsp;<\/p>\n<h2 id=\"step5creategulptasks\">Step 5: Create new Gulp Tasks<\/h2>\n<p>On it\u2019s own, Gulp does nothing. You must:<\/p>\n<ol>\n<li>install Gulp plug-ins, and<\/li>\n<li>write tasks which utilize those plug-ins to do something useful.<\/li>\n<\/ol>\n<p>It\u2019s possible to write your own plug-ins but, since almost 3,000 are available, it\u2019s unlikely you\u2019ll ever need to. You can search using Gulp\u2019s own directory at <a href=\"http:\/\/gulpjs.com\/plugins\/\">gulpjs.com\/plugins\/<\/a>, on <a href=\"https:\/\/www.npmjs.com\/\">npmjs.com<\/a>, or search \u201cgulp <em>something<\/em>\u201d to harness the mighty power of Google.<\/p>\n<p>Gulp provides three primary task methods:<\/p>\n<ul>\n<li><code class=\" language-undefined\">gulp.task<\/code> \u2013 defines a new task with a name, optional array of dependencies and a function.<\/li>\n<li><code class=\" language-undefined\">gulp.src<\/code> \u2013 sets the folder where source files are located.<\/li>\n<li><code class=\" language-undefined\">gulp.dest<\/code> \u2013 sets the destination folder where build files will be placed.<\/li>\n<\/ul>\n<p>Any number of plug-in calls are set with <code class=\" language-undefined\">pipe<\/code> between the <code class=\" language-undefined\">.src<\/code> and <code class=\" language-undefined\">.dest<\/code>.<\/p>\n<h3 id=\"imagetask\">Image Task<\/h3>\n<p>This is best demonstrated with an example so let\u2019s create a basic task which compresses images and copies them to the appropriate <code class=\" language-undefined\">build<\/code> folder. Since this process could take time, we\u2019ll only compress new and modified files. Two plug-ins can help us: <a href=\"https:\/\/www.npmjs.com\/package\/gulp-newer\">gulp-newer<\/a> and <a href=\"https:\/\/www.npmjs.com\/package\/gulp-imagemin\">gulp-imagemin<\/a>. Install them from the command-line:<\/p>\n<pre class=\" language-bash\"><code class=\"bash language-bash\">npm <span class=\"token function\">install<\/span> gulp-newer gulp-imagemin --save-dev\r\n<\/code><\/pre>\n<p>We can now reference both modules the top of <code class=\" language-undefined\">gulpfile.js<\/code>:<\/p>\n<pre class=\" language-javascript\"><code class=\"javascript language-javascript\"><span class=\"token comment\" spellcheck=\"true\">\/\/ Gulp.js configuration<\/span>\r\n\r\n<span class=\"token keyword\">var<\/span>\r\n  <span class=\"token comment\" spellcheck=\"true\">\/\/ modules<\/span>\r\n  gulp <span class=\"token operator\">=<\/span> <span class=\"token function\">require<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'gulp'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">,<\/span>\r\n  newer <span class=\"token operator\">=<\/span> <span class=\"token function\">require<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'gulp-newer'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">,<\/span>\r\n  imagemin <span class=\"token operator\">=<\/span> <span class=\"token function\">require<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'gulp-imagemin'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">,<\/span>\r\n<\/code><\/pre>\n<p>We can now define the image processing task itself as a function at the end of <code class=\" language-undefined\">gulpfile.js<\/code>:<\/p>\n<pre class=\" language-javascript\"><code class=\"javascript language-javascript\"><span class=\"token comment\" spellcheck=\"true\">\/\/ image processing<\/span>\r\ngulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">task<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'images'<\/span><span class=\"token punctuation\">,<\/span> <span class=\"token keyword\">function<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">{<\/span>\r\n  <span class=\"token keyword\">var<\/span> out <span class=\"token operator\">=<\/span> folder<span class=\"token punctuation\">.<\/span>build <span class=\"token operator\">+<\/span> <span class=\"token string\">'images\/'<\/span><span class=\"token punctuation\">;<\/span>\r\n  <span class=\"token keyword\">return<\/span> gulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">src<\/span><span class=\"token punctuation\">(<\/span>folder<span class=\"token punctuation\">.<\/span>src <span class=\"token operator\">+<\/span> <span class=\"token string\">'images\/**\/*'<\/span><span class=\"token punctuation\">)<\/span>\r\n    <span class=\"token punctuation\">.<\/span><span class=\"token function\">pipe<\/span><span class=\"token punctuation\">(<\/span><span class=\"token function\">newer<\/span><span class=\"token punctuation\">(<\/span>out<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">)<\/span>\r\n    <span class=\"token punctuation\">.<\/span><span class=\"token function\">pipe<\/span><span class=\"token punctuation\">(<\/span><span class=\"token function\">imagemin<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">{<\/span> optimizationLevel<span class=\"token punctuation\">:<\/span> <span class=\"token number\">5<\/span> <span class=\"token punctuation\">}<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">)<\/span>\r\n    <span class=\"token punctuation\">.<\/span><span class=\"token function\">pipe<\/span><span class=\"token punctuation\">(<\/span>gulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">dest<\/span><span class=\"token punctuation\">(<\/span>out<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n<span class=\"token punctuation\">}<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n<\/code><\/pre>\n<p>All tasks are syntactically similar. This code:<\/p>\n<ol>\n<li>Creates a new task named <code class=\" language-undefined\">images<\/code>.<\/li>\n<li>Defines a function with a return value which\u2026<\/li>\n<li>Defines an <code class=\" language-undefined\">out<\/code> folder where build files will be located.<\/li>\n<li>Sets the Gulp <code class=\" language-undefined\">src<\/code> source folder. The <code class=\" language-undefined\">\/**\/*<\/code> ensures that images in sub-folders are also processed.<\/li>\n<li>Pipes all files to the <code class=\" language-undefined\">gulp-newer<\/code> module. Source files that are newer than corresponding destination files are passed through. Everything else is removed.<\/li>\n<li>The remaining new or changed files are piped through <code class=\" language-undefined\">gulp-imagemin<\/code> which sets an optional <code class=\" language-undefined\">optimizationLevel<\/code>argument.<\/li>\n<li>The compressed images are output to the Gulp <code class=\" language-undefined\">dest<\/code> folder set by <code class=\" language-undefined\">out<\/code>.<\/li>\n<\/ol>\n<p>Save <code class=\" language-undefined\">gulpfile.js<\/code> and place a few images in your project\u2019s <code class=\" language-undefined\">src\/images<\/code> folder before running the task from the command line:<\/p>\n<pre class=\" language-bash\"><code class=\"bash language-bash\">gulp images\r\n<\/code><\/pre>\n<p>All images are compressed accordingly and you will see output such as:<\/p>\n<pre class=\" language-undefined\"><code class=\" language-undefined\">Using file gulpfile.js\r\nRunning 'imagemin'...\r\nFinished 'imagemin' in 5.71 ms\r\ngulp-imagemin: image1.png (saved 48.7 kB)\r\ngulp-imagemin: image2.jpg (saved 36.2 kB)\r\ngulp-imagemin: image3.svg (saved 12.8 kB)\r\n<\/code><\/pre>\n<p>Try running <code class=\" language-undefined\">gulpimages<\/code> again and nothing should happen because no newer images exist.<\/p>\n<h3 id=\"htmltask\">HTML Task<\/h3>\n<p>We can now create a similar task which copies files from the source HTML folder. We can safely minify our HTML code to remove unnecessary whitespace and attributes using the <a href=\"https:\/\/www.npmjs.com\/package\/gulp-htmlclean\">gulp-htmlclean<\/a> plug-in:<\/p>\n<pre class=\" language-bash\"><code class=\"bash language-bash\">npm <span class=\"token function\">install<\/span> gulp-htmlclean --save-dev\r\n<\/code><\/pre>\n<p>which is then referenced at the top of <code class=\" language-undefined\">gulpfile.js<\/code>:<\/p>\n<pre class=\" language-javascript\"><code class=\"javascript language-javascript\"><span class=\"token keyword\">var<\/span>\r\n  <span class=\"token comment\" spellcheck=\"true\">\/\/ modules<\/span>\r\n  gulp <span class=\"token operator\">=<\/span> <span class=\"token function\">require<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'gulp'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">,<\/span>\r\n  newer <span class=\"token operator\">=<\/span> <span class=\"token function\">require<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'gulp-newer'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">,<\/span>\r\n  imagemin <span class=\"token operator\">=<\/span> <span class=\"token function\">require<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'gulp-imagemin'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">,<\/span>\r\n  htmlclean <span class=\"token operator\">=<\/span> <span class=\"token function\">require<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'gulp-htmlclean'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">,<\/span>\r\n<\/code><\/pre>\n<p>We can now create an <code class=\" language-undefined\">html<\/code> task at the end of <code class=\" language-undefined\">gulpfile.js<\/code>:<\/p>\n<pre class=\" language-javascript\"><code class=\"javascript language-javascript\"><span class=\"token comment\" spellcheck=\"true\">\/\/ HTML processing<\/span>\r\ngulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">task<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'html'<\/span><span class=\"token punctuation\">,<\/span> <span class=\"token punctuation\">[<\/span><span class=\"token string\">'images'<\/span><span class=\"token punctuation\">]<\/span><span class=\"token punctuation\">,<\/span> <span class=\"token keyword\">function<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">{<\/span>\r\n  <span class=\"token keyword\">var<\/span>\r\n    out <span class=\"token operator\">=<\/span> folder<span class=\"token punctuation\">.<\/span>build <span class=\"token operator\">+<\/span> <span class=\"token string\">'html\/'<\/span><span class=\"token punctuation\">,<\/span>\r\n    page <span class=\"token operator\">=<\/span> gulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">src<\/span><span class=\"token punctuation\">(<\/span>folder<span class=\"token punctuation\">.<\/span>src <span class=\"token operator\">+<\/span> <span class=\"token string\">'html\/**\/*'<\/span><span class=\"token punctuation\">)<\/span>\r\n      <span class=\"token punctuation\">.<\/span><span class=\"token function\">pipe<\/span><span class=\"token punctuation\">(<\/span><span class=\"token function\">newer<\/span><span class=\"token punctuation\">(<\/span>out<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n\r\n  <span class=\"token comment\" spellcheck=\"true\">\/\/ minify production code<\/span>\r\n  <span class=\"token keyword\">if<\/span> <span class=\"token punctuation\">(<\/span><span class=\"token operator\">!<\/span>devBuild<span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">{<\/span>\r\n    page <span class=\"token operator\">=<\/span> page<span class=\"token punctuation\">.<\/span><span class=\"token function\">pipe<\/span><span class=\"token punctuation\">(<\/span><span class=\"token function\">htmlclean<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n  <span class=\"token punctuation\">}<\/span>\r\n\r\n  <span class=\"token keyword\">return<\/span> page<span class=\"token punctuation\">.<\/span><span class=\"token function\">pipe<\/span><span class=\"token punctuation\">(<\/span>gulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">dest<\/span><span class=\"token punctuation\">(<\/span>out<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n<span class=\"token punctuation\">}<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n<\/code><\/pre>\n<p>This reuses <code class=\" language-undefined\">gulp-newer<\/code> and introduces a couple of concepts:<\/p>\n<ol>\n<li>The <code class=\" language-undefined\">[images]<\/code> argument states that our <code class=\" language-undefined\">images<\/code> task must be run before processing the HTML (the HTML is likely to reference images). Any number of dependent tasks can be listed in this array and all will complete before the task function runs.<\/li>\n<li>We only pipe the HTML through <code class=\" language-undefined\">gulp-htmlclean<\/code> if <code class=\" language-undefined\">NODE_ENV<\/code> is set to <code class=\" language-undefined\">production<\/code>. Therefore, the HTML remains uncompressed during development which may be useful for debugging.<\/li>\n<\/ol>\n<p>Save <code class=\" language-undefined\">gulpfile.js<\/code> and run <code class=\" language-undefined\">gulp html<\/code> from the command line. Both the <code class=\" language-undefined\">html<\/code> and <code class=\" language-undefined\">images<\/code> tasks will run.<\/p>\n<h3 id=\"javascripttask\">JavaScript Task<\/h3>\n<p>Too easy for you? Let\u2019s process all our JavaScript files by building a basic module bundler. It will:<\/p>\n<ol>\n<li>ensure dependencies are loaded first using the <a href=\"https:\/\/www.npmjs.com\/package\/gulp-deporder\">gulp-deporder<\/a> plug-in. This analyses comments at the top of each script to ensure correct ordering e.g. <code class=\" language-undefined\">\/\/ needs: defaults.js lib.js<\/code>.<\/li>\n<li>concatenate all script files into a single <code class=\" language-undefined\">main.js<\/code> file using <a href=\"https:\/\/www.npmjs.com\/package\/gulp-concat\">gulp-concat<\/a>, and<\/li>\n<li>remove all <code class=\" language-undefined\">console<\/code> and <code class=\" language-undefined\">debugging<\/code> statements with <a href=\"https:\/\/www.npmjs.com\/package\/gulp-strip-debug\">gulp-strip-debug<\/a> and minimize code with <a href=\"https:\/\/www.npmjs.com\/package\/gulp-uglify\">gulp-uglify<\/a>. This step will only occur when running in production mode.<\/li>\n<\/ol>\n<p>Install the plug-ins:<\/p>\n<pre class=\" language-bash\"><code class=\"bash language-bash\">npm <span class=\"token function\">install<\/span> gulp-deporder gulp-concat gulp-strip-debug gulp-uglify --save-dev\r\n<\/code><\/pre>\n<p>Reference them at the top of <code class=\" language-undefined\">gulpfile.js<\/code>:<\/p>\n<pre class=\" language-javascript\"><code class=\"javascript language-javascript\"><span class=\"token keyword\">var<\/span>\r\n  <span class=\"token punctuation\">.<\/span><span class=\"token punctuation\">.<\/span><span class=\"token punctuation\">.<\/span>\r\n  concat <span class=\"token operator\">=<\/span> <span class=\"token function\">require<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'gulp-concat'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">,<\/span>\r\n  deporder <span class=\"token operator\">=<\/span> <span class=\"token function\">require<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'gulp-deporder'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">,<\/span>\r\n  stripdebug <span class=\"token operator\">=<\/span> <span class=\"token function\">require<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'gulp-strip-debug'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">,<\/span>\r\n  uglify <span class=\"token operator\">=<\/span> <span class=\"token function\">require<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'gulp-uglify'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">,<\/span>\r\n<\/code><\/pre>\n<p>Then add a new <code class=\" language-undefined\">js<\/code> task:<\/p>\n<pre class=\" language-javascript\"><code class=\"javascript language-javascript\"><span class=\"token comment\" spellcheck=\"true\">\/\/ JavaScript processing<\/span>\r\ngulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">task<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'js'<\/span><span class=\"token punctuation\">,<\/span> <span class=\"token keyword\">function<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">{<\/span>\r\n\r\n  <span class=\"token keyword\">var<\/span> jsbuild <span class=\"token operator\">=<\/span> gulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">src<\/span><span class=\"token punctuation\">(<\/span>folder<span class=\"token punctuation\">.<\/span>src <span class=\"token operator\">+<\/span> <span class=\"token string\">'js\/**\/*'<\/span><span class=\"token punctuation\">)<\/span>\r\n    <span class=\"token punctuation\">.<\/span><span class=\"token function\">pipe<\/span><span class=\"token punctuation\">(<\/span><span class=\"token function\">deporder<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">)<\/span>\r\n    <span class=\"token punctuation\">.<\/span><span class=\"token function\">pipe<\/span><span class=\"token punctuation\">(<\/span><span class=\"token function\">concat<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'main.js'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n\r\n  <span class=\"token keyword\">if<\/span> <span class=\"token punctuation\">(<\/span><span class=\"token operator\">!<\/span>devBuild<span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">{<\/span>\r\n    jsbuild <span class=\"token operator\">=<\/span> jsbuild\r\n      <span class=\"token punctuation\">.<\/span><span class=\"token function\">pipe<\/span><span class=\"token punctuation\">(<\/span><span class=\"token function\">stripdebug<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">)<\/span>\r\n      <span class=\"token punctuation\">.<\/span><span class=\"token function\">pipe<\/span><span class=\"token punctuation\">(<\/span><span class=\"token function\">uglify<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n  <span class=\"token punctuation\">}<\/span>\r\n\r\n  <span class=\"token keyword\">return<\/span> jsbuild<span class=\"token punctuation\">.<\/span><span class=\"token function\">pipe<\/span><span class=\"token punctuation\">(<\/span>gulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">dest<\/span><span class=\"token punctuation\">(<\/span>folder<span class=\"token punctuation\">.<\/span>build <span class=\"token operator\">+<\/span> <span class=\"token string\">'js\/'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n\r\n<span class=\"token punctuation\">}<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n<\/code><\/pre>\n<p>Save then run <code class=\" language-undefined\">gulp js<\/code> to watch the magic happen!<\/p>\n<h3 id=\"csstask\">CSS Task<\/h3>\n<p>Finally, let\u2019s create a CSS task which compiles Sass <code class=\" language-undefined\">.scss<\/code> files to a single <code class=\" language-undefined\">.css<\/code> file using <a href=\"https:\/\/www.npmjs.com\/package\/gulp-sass\">gulp-sass<\/a>. This is a Gulp plug-in for <a href=\"https:\/\/www.npmjs.com\/package\/node-sass\">node-sass<\/a> which binds to the super-fast <a href=\"http:\/\/sass-lang.com\/libsass\">LibSass C\/C++ port of the Sass engine<\/a> <em>(you won\u2019t need to install Ruby)<\/em>. We\u2019ll presume your primary Sass file <code class=\" language-undefined\">scss\/main.scss<\/code> is responsible for loading all partials.<\/p>\n<p>Our task will also utilize the fabulous <a href=\"http:\/\/postcss.org\/\">PostCSS<\/a> via the <a href=\"https:\/\/github.com\/postcss\/gulp-postcss\">gulp-postcss<\/a> plug-in. PostCSS needs its own set of plug-ins and we\u2019ll install:<\/p>\n<ul>\n<li><a href=\"https:\/\/www.npmjs.com\/package\/postcss-assets\">postcss-assets<\/a> to manage assets. This allows us to use properties such as <code class=\" language-undefined\">background: resolve('image.png');<\/code> to resolve file paths or <code class=\" language-undefined\">background: inline('image.png');<\/code> to inline data-encoded images.<\/li>\n<li><a href=\"https:\/\/www.npmjs.com\/package\/autoprefixer\">autoprefixer<\/a> to automatically add vendor prefixes to CSS properties.<\/li>\n<li><a href=\"https:\/\/www.npmjs.com\/package\/css-mqpacker\">css-mqpacker<\/a> to pack multiple references to the same CSS media query into a single rule.<\/li>\n<li><a href=\"https:\/\/www.npmjs.com\/package\/cssnano\">cssnano<\/a> to minify the CSS code when running in production mode.<\/li>\n<\/ul>\n<p>First, install all the modules:<\/p>\n<pre class=\" language-bash\"><code class=\"bash language-bash\">npm <span class=\"token function\">install<\/span> gulp-sass gulp-postcss postcss-assets autoprefixer css-mqpacker cssnano --save-dev\r\n<\/code><\/pre>\n<p>and reference them at the top of <code class=\" language-undefined\">gulpfile.js<\/code>:<\/p>\n<pre class=\" language-javascript\"><code class=\"javascript language-javascript\"><span class=\"token keyword\">var<\/span>\r\n  <span class=\"token punctuation\">.<\/span><span class=\"token punctuation\">.<\/span><span class=\"token punctuation\">.<\/span>\r\n  sass <span class=\"token operator\">=<\/span> <span class=\"token function\">require<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'gulp-sass'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">,<\/span>\r\n  postcss <span class=\"token operator\">=<\/span> <span class=\"token function\">require<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'gulp-postcss'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">,<\/span>\r\n  assets <span class=\"token operator\">=<\/span> <span class=\"token function\">require<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'postcss-assets'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">,<\/span>\r\n  autoprefixer <span class=\"token operator\">=<\/span> <span class=\"token function\">require<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'autoprefixer'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">,<\/span>\r\n  mqpacker <span class=\"token operator\">=<\/span> <span class=\"token function\">require<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'css-mqpacker'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">,<\/span>\r\n  cssnano <span class=\"token operator\">=<\/span> <span class=\"token function\">require<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'cssnano'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">,<\/span>\r\n<\/code><\/pre>\n<p>We can now create a new <code class=\" language-undefined\">css<\/code> task at the end of <code class=\" language-undefined\">gulpfile.js<\/code>. Note the <code class=\" language-undefined\">images<\/code> task is set as a dependency because the <code class=\" language-undefined\">postcss-assets<\/code> plug-in can reference images during the build process. In addition, most plug-ins can be passed arguments \u2013 refer to their documentation for more information:<\/p>\n<pre class=\" language-javascript\"><code class=\"javascript language-javascript\"><span class=\"token comment\" spellcheck=\"true\">\/\/ CSS processing<\/span>\r\ngulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">task<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'css'<\/span><span class=\"token punctuation\">,<\/span> <span class=\"token punctuation\">[<\/span><span class=\"token string\">'images'<\/span><span class=\"token punctuation\">]<\/span><span class=\"token punctuation\">,<\/span> <span class=\"token keyword\">function<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">{<\/span>\r\n\r\n  <span class=\"token keyword\">var<\/span> postCssOpts <span class=\"token operator\">=<\/span> <span class=\"token punctuation\">[<\/span>\r\n  <span class=\"token function\">assets<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">{<\/span> loadPaths<span class=\"token punctuation\">:<\/span> <span class=\"token punctuation\">[<\/span><span class=\"token string\">'images\/'<\/span><span class=\"token punctuation\">]<\/span> <span class=\"token punctuation\">}<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">,<\/span>\r\n  <span class=\"token function\">autoprefixer<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">{<\/span> browsers<span class=\"token punctuation\">:<\/span> <span class=\"token punctuation\">[<\/span><span class=\"token string\">'last 2 versions'<\/span><span class=\"token punctuation\">,<\/span> <span class=\"token string\">'&gt; 2%'<\/span><span class=\"token punctuation\">]<\/span> <span class=\"token punctuation\">}<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">,<\/span>\r\n  mqpacker\r\n  <span class=\"token punctuation\">]<\/span><span class=\"token punctuation\">;<\/span>\r\n\r\n  <span class=\"token keyword\">if<\/span> <span class=\"token punctuation\">(<\/span><span class=\"token operator\">!<\/span>devBuild<span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">{<\/span>\r\n    postCssOpts<span class=\"token punctuation\">.<\/span><span class=\"token function\">push<\/span><span class=\"token punctuation\">(<\/span>cssnano<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n  <span class=\"token punctuation\">}<\/span>\r\n\r\n  <span class=\"token keyword\">return<\/span> gulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">src<\/span><span class=\"token punctuation\">(<\/span>folder<span class=\"token punctuation\">.<\/span>src <span class=\"token operator\">+<\/span> <span class=\"token string\">'scss\/main.scss'<\/span><span class=\"token punctuation\">)<\/span>\r\n    <span class=\"token punctuation\">.<\/span><span class=\"token function\">pipe<\/span><span class=\"token punctuation\">(<\/span><span class=\"token function\">sass<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">{<\/span>\r\n      outputStyle<span class=\"token punctuation\">:<\/span> <span class=\"token string\">'nested'<\/span><span class=\"token punctuation\">,<\/span>\r\n      imagePath<span class=\"token punctuation\">:<\/span> <span class=\"token string\">'images\/'<\/span><span class=\"token punctuation\">,<\/span>\r\n      precision<span class=\"token punctuation\">:<\/span> <span class=\"token number\">3<\/span><span class=\"token punctuation\">,<\/span>\r\n      errLogToConsole<span class=\"token punctuation\">:<\/span> <span class=\"token boolean\">true<\/span>\r\n    <span class=\"token punctuation\">}<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">)<\/span>\r\n    <span class=\"token punctuation\">.<\/span><span class=\"token function\">pipe<\/span><span class=\"token punctuation\">(<\/span><span class=\"token function\">postcss<\/span><span class=\"token punctuation\">(<\/span>postCssOpts<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">)<\/span>\r\n    <span class=\"token punctuation\">.<\/span><span class=\"token function\">pipe<\/span><span class=\"token punctuation\">(<\/span>gulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">dest<\/span><span class=\"token punctuation\">(<\/span>folder<span class=\"token punctuation\">.<\/span>build <span class=\"token operator\">+<\/span> <span class=\"token string\">'css\/'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n\r\n<span class=\"token punctuation\">}<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n<\/code><\/pre>\n<p>Save the file and run the task from the command line:<\/p>\n<pre class=\" language-bash\"><code class=\"bash language-bash\">gulp css\r\n<\/code><\/pre>\n<h2 id=\"step6automatetasks\">Step 6: Automate You Gulp Tasks<\/h2>\n<p>We\u2019ve been running one task at a time. We can run them all in one command by adding a new <code class=\" language-undefined\">run<\/code> task to <code class=\" language-undefined\">gulpfile.js<\/code>:<\/p>\n<pre class=\" language-javascript\"><code class=\"javascript language-javascript\"><span class=\"token comment\" spellcheck=\"true\">\/\/ run all tasks<\/span>\r\ngulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">task<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'run'<\/span><span class=\"token punctuation\">,<\/span> <span class=\"token punctuation\">[<\/span><span class=\"token string\">'html'<\/span><span class=\"token punctuation\">,<\/span> <span class=\"token string\">'css'<\/span><span class=\"token punctuation\">,<\/span> <span class=\"token string\">'js'<\/span><span class=\"token punctuation\">]<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n<\/code><\/pre>\n<p>Save and enter <code class=\" language-undefined\">gulp run<\/code> at the command line to execute all tasks. Note I omitted the <code class=\" language-undefined\">images<\/code> task because it\u2019s already set as a dependency for the <code class=\" language-undefined\">html<\/code> and <code class=\" language-undefined\">css<\/code> tasks.<\/p>\n<p>Is this still too much hard work? Gulp offers another method \u2013 <code class=\" language-undefined\">gulp.watch<\/code> \u2013 which can monitor your source files and run an appropriate task whenever a file is changed. The method is passed a folder and a list of tasks to execute when a change occurs. Let\u2019s create a new <code class=\" language-undefined\">watch<\/code> task at the end of <code class=\" language-undefined\">gulpfile.js<\/code>:<\/p>\n<pre class=\" language-javascript\"><code class=\"javascript language-javascript\"><span class=\"token comment\" spellcheck=\"true\">\/\/ watch for changes<\/span>\r\ngulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">task<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'watch'<\/span><span class=\"token punctuation\">,<\/span> <span class=\"token keyword\">function<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">{<\/span>\r\n\r\n  <span class=\"token comment\" spellcheck=\"true\">\/\/ image changes<\/span>\r\n  gulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">watch<\/span><span class=\"token punctuation\">(<\/span>folder<span class=\"token punctuation\">.<\/span>src <span class=\"token operator\">+<\/span> <span class=\"token string\">'images\/**\/*'<\/span><span class=\"token punctuation\">,<\/span> <span class=\"token punctuation\">[<\/span><span class=\"token string\">'images'<\/span><span class=\"token punctuation\">]<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n\r\n  <span class=\"token comment\" spellcheck=\"true\">\/\/ html changes<\/span>\r\n  gulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">watch<\/span><span class=\"token punctuation\">(<\/span>folder<span class=\"token punctuation\">.<\/span>src <span class=\"token operator\">+<\/span> <span class=\"token string\">'html\/**\/*'<\/span><span class=\"token punctuation\">,<\/span> <span class=\"token punctuation\">[<\/span><span class=\"token string\">'html'<\/span><span class=\"token punctuation\">]<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n\r\n  <span class=\"token comment\" spellcheck=\"true\">\/\/ javascript changes<\/span>\r\n  gulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">watch<\/span><span class=\"token punctuation\">(<\/span>folder<span class=\"token punctuation\">.<\/span>src <span class=\"token operator\">+<\/span> <span class=\"token string\">'js\/**\/*'<\/span><span class=\"token punctuation\">,<\/span> <span class=\"token punctuation\">[<\/span><span class=\"token string\">'js'<\/span><span class=\"token punctuation\">]<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n\r\n  <span class=\"token comment\" spellcheck=\"true\">\/\/ css changes<\/span>\r\n  gulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">watch<\/span><span class=\"token punctuation\">(<\/span>folder<span class=\"token punctuation\">.<\/span>src <span class=\"token operator\">+<\/span> <span class=\"token string\">'scss\/**\/*'<\/span><span class=\"token punctuation\">,<\/span> <span class=\"token punctuation\">[<\/span><span class=\"token string\">'css'<\/span><span class=\"token punctuation\">]<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n\r\n<span class=\"token punctuation\">}<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n<\/code><\/pre>\n<p>Rather than running <code class=\" language-undefined\">gulp watch<\/code> immediately, let\u2019s add a default task:<\/p>\n<pre class=\" language-javascript\"><code class=\"javascript language-javascript\"><span class=\"token comment\" spellcheck=\"true\">\/\/ default task<\/span>\r\ngulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">task<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'default'<\/span><span class=\"token punctuation\">,<\/span> <span class=\"token punctuation\">[<\/span><span class=\"token string\">'run'<\/span><span class=\"token punctuation\">,<\/span> <span class=\"token string\">'watch'<\/span><span class=\"token punctuation\">]<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n<\/code><\/pre>\n<p>Save <code class=\" language-undefined\">gulpfile.js<\/code> and enter <code class=\" language-undefined\">gulp<\/code> at the command line. Your images, HTML, CSS and JavaScript will all be processed then Gulp will remain active watching for updates and re-running tasks as necessary. Hit Ctrl\/Cmd + C to abort monitoring and return to the command line.<\/p>\n<h2 id=\"step7profit\">Step 7: Yupi!<\/h2>\n<p>Other plug-ins you may find useful:<\/p>\n<ul>\n<li><a href=\"https:\/\/www.npmjs.com\/package\/gulp-load-plugins\">gulp-load-plugins<\/a> \u2013 load all Gulp plug-in modules without <code class=\" language-undefined\">require<\/code> declarations<\/li>\n<li><a href=\"https:\/\/www.npmjs.com\/package\/gulp-preprocess\">gulp-preprocess<\/a> \u2013 a simple HTML and JavaScript <a href=\"https:\/\/github.com\/jsoverson\/preprocess\">preprocess<\/a>or<\/li>\n<li><a href=\"https:\/\/www.npmjs.com\/package\/gulp-less\">gulp-less<\/a> \u2013 the <a href=\"http:\/\/lesscss.org\/\">Less CSS pre-processor<\/a> plug-in<\/li>\n<li><a href=\"https:\/\/www.npmjs.com\/package\/gulp-stylus\">gulp-stylus<\/a> \u2013 the <a href=\"http:\/\/stylus-lang.com\/\">Stylus CSS pre-processor<\/a> plug-in<\/li>\n<li><a href=\"https:\/\/www.npmjs.com\/package\/gulp-sequence\">gulp-sequence<\/a> \u2013 run a series of gulp tasks in a specific order<\/li>\n<li><a href=\"https:\/\/www.npmjs.com\/package\/gulp-plumber\">gulp-plumber<\/a> \u2013 error handling which prevents Gulp stopping on failures<\/li>\n<li><a href=\"https:\/\/www.npmjs.com\/package\/gulp-size\">gulp-size<\/a> \u2013 displays file sizes and savings<\/li>\n<li><a href=\"https:\/\/www.npmjs.com\/package\/gulp-nodemon\">gulp-nodemon<\/a> \u2013 uses <a href=\"https:\/\/www.npmjs.com\/package\/nodemon\">nodemon<\/a> to automatically rebegin Node.js applications when changes occur.<\/li>\n<li><a href=\"https:\/\/www.npmjs.com\/package\/gulp-util\">gulp-util<\/a> \u2013 utility functions including logging and color-coding<\/li>\n<\/ul>\n<p>One useful method in <code class=\" language-undefined\">gulp-util<\/code> is <code class=\" language-undefined\">.noop()<\/code> which passes data straight through without performing any action. This could be used for cleaner development\/production processing code, e.g.<\/p>\n<pre class=\" language-javascript\"><code class=\"javascript language-javascript\"><span class=\"token keyword\">var<\/span> gutil <span class=\"token operator\">=<\/span> <span class=\"token function\">require<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'gulp-util'<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n\r\n<span class=\"token comment\" spellcheck=\"true\">\/\/ HTML processing<\/span>\r\ngulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">task<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">'html'<\/span><span class=\"token punctuation\">,<\/span> <span class=\"token punctuation\">[<\/span><span class=\"token string\">'images'<\/span><span class=\"token punctuation\">]<\/span><span class=\"token punctuation\">,<\/span> <span class=\"token keyword\">function<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">{<\/span>\r\n  <span class=\"token keyword\">var<\/span> out <span class=\"token operator\">=<\/span> folder<span class=\"token punctuation\">.<\/span>src <span class=\"token operator\">+<\/span> <span class=\"token string\">'html\/**\/*'<\/span><span class=\"token punctuation\">;<\/span>\r\n\r\n  <span class=\"token keyword\">return<\/span> gulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">src<\/span><span class=\"token punctuation\">(<\/span>folder<span class=\"token punctuation\">.<\/span>src <span class=\"token operator\">+<\/span> <span class=\"token string\">'html\/**\/*'<\/span><span class=\"token punctuation\">)<\/span>\r\n    <span class=\"token punctuation\">.<\/span><span class=\"token function\">pipe<\/span><span class=\"token punctuation\">(<\/span><span class=\"token function\">newer<\/span><span class=\"token punctuation\">(<\/span>out<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">)<\/span>\r\n    <span class=\"token punctuation\">.<\/span><span class=\"token function\">pipe<\/span><span class=\"token punctuation\">(<\/span>devBuild <span class=\"token operator\">?<\/span> gutil<span class=\"token punctuation\">.<\/span><span class=\"token function\">noop<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">:<\/span> <span class=\"token function\">htmlclean<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">)<\/span>\r\n    <span class=\"token punctuation\">.<\/span><span class=\"token function\">pipe<\/span><span class=\"token punctuation\">(<\/span>gulp<span class=\"token punctuation\">.<\/span><span class=\"token function\">dest<\/span><span class=\"token punctuation\">(<\/span>out<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n\r\n<span class=\"token punctuation\">}<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n<\/code><\/pre>\n<p>Gulp can also call other Node.js modules \u2013 they don\u2019t necessarily need to be plug-ins, e.g.<\/p>\n<ul>\n<li><a href=\"https:\/\/www.npmjs.com\/package\/browser-sync\">browser-sync<\/a> \u2013 automatically reload assets or refresh your browser when changes occur<\/li>\n<li><a href=\"https:\/\/www.npmjs.com\/package\/del\">del<\/a> \u2013 delete files and folders (perhaps clean your <code class=\" language-undefined\">build<\/code> folder at the begin of every run).<\/li>\n<\/ul>\n<p>Invest a little time and Gulp could save many hours of development frustration. The advantages:<\/p>\n<ul>\n<li><a href=\"https:\/\/npmjs.org\/browse\/keyword\/gulpplugin\/\">plug-ins are plentiful<\/a><\/li>\n<li>configuration using pipes is readable and easy to follow<\/li>\n<li><code class=\" language-undefined\">gulpfile.js<\/code> can be adapted and reused in other projects<\/li>\n<li>your total page weight can be reduced to improve performance<\/li>\n<li>you can simplify your deployment.<\/li>\n<\/ul>\n<p>Useful links:<\/p>\n<ul>\n<li><a href=\"http:\/\/gulpjs.com\/\">Gulp home page<\/a><\/li>\n<li><a href=\"https:\/\/npmjs.org\/browse\/keyword\/gulpplugin\/\">Gulp plug-ins<\/a><\/li>\n<li><a href=\"https:\/\/www.npmjs.com\/\">npm home page<\/a><\/li>\n<\/ul>\n","protected":false},"excerpt":{"rendered":"<p>Front end front end developers spend little time coding. Even if we ignore meetings, much of the job involves basic tasks your working day: Tasks must be repeated every time you make a change. You begin with good intentions but the infallible front end developer will forget to compress an image or two. Over time, [&hellip;]<\/p>\n","protected":false},"author":4,"featured_media":1332,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"categories":[1],"tags":[50],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v18.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>First steps with Gulp.js | JJ<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"First steps with Gulp.js | JJ\" \/>\n<meta property=\"og:description\" content=\"Front end front end developers spend little time coding. Even if we ignore meetings, much of the job involves basic tasks your working day: Tasks must be repeated every time you make a change. You begin with good intentions but the infallible front end developer will forget to compress an image or two. Over time, [&hellip;]\" \/>\n<meta property=\"og:url\" content=\"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/\" \/>\n<meta property=\"og:site_name\" content=\"JJ\" \/>\n<meta property=\"article:published_time\" content=\"2017-01-22T13:26:16+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2017-01-22T14:04:55+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2017\/01\/gulp-bg.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1600\" \/>\n\t<meta property=\"og:image:height\" content=\"800\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"twitter:card\" content=\"summary\" \/>\n<meta name=\"twitter:creator\" content=\"@JeznachJacek\" \/>\n<meta name=\"twitter:site\" content=\"@JeznachJacek\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Jacek Jeznach\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"13 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/jacekjeznach.com\/#website\",\"url\":\"https:\/\/jacekjeznach.com\/\",\"name\":\"JJ\",\"description\":\"Hire Professional  WordPress Expert - providing multiple services including website maintenance and interactive solutions\",\"publisher\":{\"@id\":\"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/jacekjeznach.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2017\/01\/gulp-bg.png\",\"contentUrl\":\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2017\/01\/gulp-bg.png\",\"width\":1600,\"height\":800},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/#webpage\",\"url\":\"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/\",\"name\":\"First steps with Gulp.js | JJ\",\"isPartOf\":{\"@id\":\"https:\/\/jacekjeznach.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/#primaryimage\"},\"datePublished\":\"2017-01-22T13:26:16+00:00\",\"dateModified\":\"2017-01-22T14:04:55+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/jacekjeznach.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"First steps with Gulp.js\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/#webpage\"},\"author\":{\"@id\":\"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e\"},\"headline\":\"First steps with Gulp.js\",\"datePublished\":\"2017-01-22T13:26:16+00:00\",\"dateModified\":\"2017-01-22T14:04:55+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/#webpage\"},\"wordCount\":2051,\"publisher\":{\"@id\":\"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e\"},\"image\":{\"@id\":\"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2017\/01\/gulp-bg.png\",\"keywords\":[\"task runner\"],\"articleSection\":[\"Web Development\"],\"inLanguage\":\"en-US\"},{\"@type\":[\"Person\",\"Organization\"],\"@id\":\"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e\",\"name\":\"Jacek Jeznach\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/jacekjeznach.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/dc947f87f7bb9ca215513aa49e41203f?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/dc947f87f7bb9ca215513aa49e41203f?s=96&d=mm&r=g\",\"caption\":\"Jacek Jeznach\"},\"logo\":{\"@id\":\"https:\/\/jacekjeznach.com\/#personlogo\"},\"url\":\"https:\/\/jacekjeznach.com\/author\/jeznacki1234\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"First steps with Gulp.js | JJ","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/","og_locale":"en_US","og_type":"article","og_title":"First steps with Gulp.js | JJ","og_description":"Front end front end developers spend little time coding. Even if we ignore meetings, much of the job involves basic tasks your working day: Tasks must be repeated every time you make a change. You begin with good intentions but the infallible front end developer will forget to compress an image or two. Over time, [&hellip;]","og_url":"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/","og_site_name":"JJ","article_published_time":"2017-01-22T13:26:16+00:00","article_modified_time":"2017-01-22T14:04:55+00:00","og_image":[{"width":1600,"height":800,"url":"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2017\/01\/gulp-bg.png","type":"image\/png"}],"twitter_card":"summary","twitter_creator":"@JeznachJacek","twitter_site":"@JeznachJacek","twitter_misc":{"Written by":"Jacek Jeznach","Est. reading time":"13 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/jacekjeznach.com\/#website","url":"https:\/\/jacekjeznach.com\/","name":"JJ","description":"Hire Professional  WordPress Expert - providing multiple services including website maintenance and interactive solutions","publisher":{"@id":"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/jacekjeznach.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/#primaryimage","inLanguage":"en-US","url":"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2017\/01\/gulp-bg.png","contentUrl":"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2017\/01\/gulp-bg.png","width":1600,"height":800},{"@type":"WebPage","@id":"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/#webpage","url":"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/","name":"First steps with Gulp.js | JJ","isPartOf":{"@id":"https:\/\/jacekjeznach.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/#primaryimage"},"datePublished":"2017-01-22T13:26:16+00:00","dateModified":"2017-01-22T14:04:55+00:00","breadcrumb":{"@id":"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/jacekjeznach.com\/"},{"@type":"ListItem","position":2,"name":"First steps with Gulp.js"}]},{"@type":"Article","@id":"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/#article","isPartOf":{"@id":"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/#webpage"},"author":{"@id":"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e"},"headline":"First steps with Gulp.js","datePublished":"2017-01-22T13:26:16+00:00","dateModified":"2017-01-22T14:04:55+00:00","mainEntityOfPage":{"@id":"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/#webpage"},"wordCount":2051,"publisher":{"@id":"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e"},"image":{"@id":"https:\/\/jacekjeznach.com\/first-steps-with-gulp-js\/#primaryimage"},"thumbnailUrl":"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2017\/01\/gulp-bg.png","keywords":["task runner"],"articleSection":["Web Development"],"inLanguage":"en-US"},{"@type":["Person","Organization"],"@id":"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e","name":"Jacek Jeznach","image":{"@type":"ImageObject","@id":"https:\/\/jacekjeznach.com\/#personlogo","inLanguage":"en-US","url":"https:\/\/secure.gravatar.com\/avatar\/dc947f87f7bb9ca215513aa49e41203f?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/dc947f87f7bb9ca215513aa49e41203f?s=96&d=mm&r=g","caption":"Jacek Jeznach"},"logo":{"@id":"https:\/\/jacekjeznach.com\/#personlogo"},"url":"https:\/\/jacekjeznach.com\/author\/jeznacki1234\/"}]}},"_links":{"self":[{"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/posts\/1326"}],"collection":[{"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/users\/4"}],"replies":[{"embeddable":true,"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/comments?post=1326"}],"version-history":[{"count":8,"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/posts\/1326\/revisions"}],"predecessor-version":[{"id":1346,"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/posts\/1326\/revisions\/1346"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/media\/1332"}],"wp:attachment":[{"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/media?parent=1326"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/categories?post=1326"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/tags?post=1326"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}