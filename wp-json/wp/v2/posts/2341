{"id":2341,"date":"2021-10-03T13:34:39","date_gmt":"2021-10-03T13:34:39","guid":{"rendered":"https:\/\/jacekjeznach.com\/?p=2341"},"modified":"2022-02-01T12:23:17","modified_gmt":"2022-02-01T12:23:17","slug":"information-representation-part-2","status":"publish","type":"post","link":"https:\/\/jacekjeznach.com\/information-representation-part-2\/","title":{"rendered":"Information Representation (Part 2)"},"content":{"rendered":"<h2>Data Types<\/h2>\n<p>Files, or large blocks of data, need to have context. On a more granular level, individual units of data must also have context. When we work with a data point, it must be defined to the computer as a number, a character, a memory location, or something else. For instance, a Word document contains all kinds of different data: some numerical, some character, some formatting. Each separate character would need a data type to identify it correctly.<\/p>\n<h3><span style=\"color: #fd2155;\">Variables<\/span><\/h3>\n<p>In programming, the coder creates variables to store individual units of data. A variable is a container for information. It has three important defining factors: a name, a type, and a memory location. The name is what it will be referred to in code, just as if you wrote a label on a box. The memory location is where the computer can find this box in RAM.<\/p>\n<p><a href=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/pobrane-e1641216845728.jpg\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-2342\" src=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/pobrane-e1641216845728.jpg\" alt=\"\" width=\"1000\" height=\"314\" srcset=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/pobrane-e1641216845728.jpg 1000w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/pobrane-e1641216845728-350x110.jpg 350w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/pobrane-e1641216845728-700x220.jpg 700w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/pobrane-e1641216845728-768x241.jpg 768w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/pobrane-e1641216845728-120x38.jpg 120w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" \/><\/a><\/p>\n<p>Let\u2019s say you create a variable called \u201cAGE.\u201d The computer will label that box with the name and store it somewhere in memory. But there\u2019s nothing in the box yet. We need to store a value in the box; a variable is a container for a data value. The value of 37 is assigned to the variable \u201cAGE.\u201d Now when the computer goes to find the box and opens it, the value 37 is discovered within. Just like in real life, a box can be reused; we can put other values in the box at different times. This is why it is called a variable\u2014the value inside it can vary. It is different from a constant which is declared at the beginning of the program and cannot ever change. The data inside must also have a \u201ctype.\u201d Just as a paper bag is not made to contain liquids, but solids, variables are designed to contain specific types of data.<\/p>\n<h4><span style=\"color: #05fdd8;\">Integers<\/span><\/h4>\n<p>An integer is a unit number; this means it contains no decimal component. Integers include all the natural numbers (1,2,3, etc.), their negative versions, and zero. This definition is important to a computer since it does not have to assign any memory to decimals, only unit numbers. In the previous case of the variable \u201cAGE,\u201d an integer would be a good data type to use, since it is a standard convention to list someone\u2019s age as a unit number without a fraction or decimal on many forms and records.<\/p>\n<p>In Java, the integer data type is abbreviated \u201cint.\u201d To declare (create) a variable for age, it would look like this:<\/p>\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">int age = 0;<\/pre>\n<p>When declaring a variable, in some languages a starting value must be given; this is referred to as initializing. In this case, the variable is initialized to zero. It presumes that an actual age will be calculated or input by the user later.<\/p>\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-7829400583245190\"\r\n     data-ad-slot=\"7226953054\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h4><span style=\"color: #05fdd8;\">Numerical data types<\/span><\/h4>\n<p>Other standard data types include longer integers and decimals. The following are some example numerical data types in the programming language Java.<\/p>\n<p><strong>Byte<\/strong>: integer from -128 to 127 (8 bits)<\/p>\n<p><strong>Int<\/strong>: integer from -2147483648 to 213748647 (32 bits)<\/p>\n<p><strong>Float<\/strong>: a decimal number from 3.4e &#8211; 038 to 3.4e + 038 (32 bits)<\/p>\n<p><strong>Double<\/strong>: a decimal number from 1.7 e &#8211; 308 to 1.7e +308 (64 bits)<\/p>\n<p>As you can see, data types are specified in bits\u2014this is important to programmers. You don\u2019t need to use a huge box to store a pair of sunglasses; it\u2019s a waste of space. Coders also shouldn\u2019t use large variables such as int when a byte will do. Note that a \u201cbyte\u201d data type can store 256 different values; some of them are used for negative, some positive, and one is zero. To declare these variables in Java, you\u2019d do something like this:<\/p>\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">byte age = 37;\r\n\r\nint jellybeans = 2243;\r\n\r\nfloat fluidOunces = 28.73;\r\n\r\ndouble solarDistance = 932842983.2340273; <\/pre>\n<p>The reason a decimal is called a <strong>\u201cfloat\u201d<\/strong> is because the decimal point can float around to different places in the number. This is an important distinction for a computer: where is the decimal? That must be stored somewhere in the variable itself. It is something a human would take for granted, but something that has to be specified for a computer. Many programming languages are also case-sensitive; this means that the variable \u201cage\u201d is not the same as \u201cAge\u201d or even \u201cAGE.\u201d Good coders should follow a naming convention for all of their variables for consistency.<\/p>\n<h4><span style=\"color: #05fdd8;\">Non-numeric data types<\/span><\/h4>\n<p>Most languages, including Java, have a basic data type to store one \u201ccharacter.\u201d This represents one symbol in a language, so would include letters, numbers, spaces, and punctuation. You might think that we have already covered numbers, but remember computers are very specific. The numeric value of \u201c2\u201d is a separate concept than the character for \u201c2\u201d. Humans automatically deal with the different contexts where we see the symbol for \u201c2,\u201d but computers are more specific. Consider that displaying the number 2 on the screen as a specific group of pixels is completely different operation than multiplying a value by 2.<\/p>\n<p>In English and many other languages, words and sentences are represented by groups of characters strung together\u2014this is the reason that computers have a data type called a string. A string is a group of characters strung together. Therefore, it is actually a complex data type consisting of several simple (or \u201cprimitive\u201d) variables combined together (primitive data types). Here are some non-numeric data types from Java (Oracle, 2020):<\/p>\n<ul>\n<li><strong>Char<\/strong> (a character): letter, number or symbol (16 bits)<\/li>\n<li><strong>Boolean<\/strong>: represents \u201ctrue or false\u201d (1 bit)<\/li>\n<li><strong>String<\/strong>: a sequence of character information (varies in size)<\/li>\n<li><strong>Array<\/strong>: an ordered sequence of a primitive data type (varies in size)<\/li>\n<\/ul>\n<p>A <strong>Boolean variable<\/strong> (named after mathematician George Boole) represents either a<strong> TRUE or FALSE<\/strong> value, and therefore only has two possible states, which technically can be stored as one bit; zero is used for false and one for true.<\/p>\n<p><strong>An array<\/strong> is an ordered arrangement of a simpler data type. You could, for instance, have an array of integers, doubles, or even Booleans. However, an array of characters is so common that the data type string usually exists in most languages for storing language text. Let\u2019s look at how these data types would be declared as Java variables:<\/p>\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\r\n\r\nchar middleInitial = \u201cA\u201d;\r\n\r\nString firstName = \u201cJoseph\u201d;\r\n\r\nint[] lottoNumbers = {5, 22, 11, 7, 16}\r\n\r\n<\/pre>\n<p>elements in the array that represent different lottery number picks. To reference the second number, you would type \u201clottoNumbers[1]\u201d and it would return the value \u201c22\u201d.<\/p>\n<p>Arrays are often used when you have a collection of data of the same type that you want to store in order. You can search through them sequentially, pick out singular items that you want to work with, and even sort the list of elements in order. Uses of arrays include lists of options to choose from, arranging data groupings, or collecting user input, to name a few.<\/p>\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-7829400583245190\"\r\n     data-ad-slot=\"9851625702\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\r\n\n<h3><span style=\"color: #fd2155;\">Using Variables Correctly<\/span><\/h3>\n<p>When creating variables, you should be considering the correct data type as well as the memory usage. Not only that, but descriptive names should be given that also follow the standard naming convention that is used for that language. Many new programmers begin by naming their variables \u201cx\u201d and \u201cy\u201d for simple programs, but these names are non-descriptive and will be problematic in code of any reasonable length. In code with hundreds of variables, non-descriptive names will leave the programming unreadable to anyone, including the original coder. Variables should not be a mystery; they should be named in a way that describes their use in code. Computers have very specific data types and expect them to be used in the correct context. You cannot \u201cadd\u201d together two char data types and expect the same result as adding two integers. The computer will see this as two different things. If you have the characters (char data type) \u201c4\u201d and \u201c2\u201d and combine them, in many computer languages you will get \u201c42\u201d instead of 6. The characters are seen as symbols and simply placed together; if they were numeric variables (such as int) then adding them would produce a numeric answer rather than a character based answer. Computers do exactly what they are told. This is why data types and variables must be used with precision.<\/p>\n<h2>Redundancy and Error Tolerance<\/h2>\n<p>Imagine writing a 100,000-word novel. You carefully read the manuscript after your first draft, and check for mistakes\u2014but did you really find all of them? There is still a chance that errors slipped through. You might do a second check or hire an editor. Are you sure you got all of them this time? It is very difficult to be sure of perfection in such a large volume of words. Computers process words and information at a much higher rate than human beings. A simple image on your screen of 800 x 600 pixels has 480,000 pixels. Are they all exactly the right color? Did some bits get confused in transmission? A computer, though very perfect in its calculation, can also suffer from errors in data transmission. Whenever data is moved from one location to another, there is a chance that the electrical signal may be garbled, interfered with, or interrupted. Data can move from RAM to the hard drive, from the hard drive to the internet, then from the internet to your friend\u2019s house in Argentina. So just sending a photo of a cat to Mari Rubi in Buenos Aires has several points where errors can occur. Therefore, computers must have built in precautions against error corruption.<\/p>\n<h3>Storage Error Checking<\/h3>\n<p>Some errors are not caused by transmission, but media corruption. Hard drives typically last about three to five years. Some drives experience a gradual corruption, where parts of the physical surface become unstable and will no longer store data. An early method to protect files in storage from corruption is the checksum.<\/p>\n<p>Recall that any file on a computer is a series of binary numbers\u2014in fact, it could be considered one very long binary number. One way to check if it has been changed (corrupted) would be to store an exact copy somewhere and then compare it. But because some files are megabytes, or even gigabytes, in size, this would be very inefficient. Instead, since the file is one large binary number, it is placed into an algorithm. This algorithm is like a mathematical function\u2014it has a numeric solution. The checksum is the solution to this problem; it is calculated and appended to the file when it is saved. When the file is opened, the calculation is run again to see if it matches the number stored in the file. If it does, then the chances of it being uncorrupted are incredibly high. (There is a small chance that changes to a file might give the same checksum, but it is remote enough that the error checking is considered reliable.) Usually, corruption in files is very minor and easy to detect in a checksum.<\/p>\n<p><a href=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_251161fcc3ebe3b90c868a9ee5442e3798b15b5e3cae4ca0787a1a354ac3aa86.jpg\"><img loading=\"lazy\" class=\"wp-image-2350 size-large aligncenter\" src=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_251161fcc3ebe3b90c868a9ee5442e3798b15b5e3cae4ca0787a1a354ac3aa86-e1641218909892-700x504.jpg\" alt=\"\" width=\"700\" height=\"504\" srcset=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_251161fcc3ebe3b90c868a9ee5442e3798b15b5e3cae4ca0787a1a354ac3aa86-e1641218909892-700x504.jpg 700w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_251161fcc3ebe3b90c868a9ee5442e3798b15b5e3cae4ca0787a1a354ac3aa86-e1641218909892-350x252.jpg 350w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_251161fcc3ebe3b90c868a9ee5442e3798b15b5e3cae4ca0787a1a354ac3aa86-e1641218909892-768x553.jpg 768w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_251161fcc3ebe3b90c868a9ee5442e3798b15b5e3cae4ca0787a1a354ac3aa86-e1641218909892-120x86.jpg 120w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_251161fcc3ebe3b90c868a9ee5442e3798b15b5e3cae4ca0787a1a354ac3aa86-e1641218909892.jpg 1500w\" sizes=\"(max-width: 700px) 100vw, 700px\" \/><\/a><\/p>\n<p>Notice in this example the text is only changed slightly in the later texts, but the checksum is very different. Since the number is 10 digits, there are 10,000,000,000 different possibilities, making the random chance that two texts have the same checksum 1 in 10 billion.<\/p>\n<h3>Transmission Data Fault Tolerance<\/h3>\n<p>The problem of corrupted transmission of data has existed since before computer networks were invented. Radio transmission of secret codes by different militaries risked this problem, as did communication by telegram, and even a letter written by hand could be damaged by water or other environmental hazards.<\/p>\n<h4>Parity<\/h4>\n<p>One of the earliest methods of error-checking for binary data is called parity. Communication with telephone-based modems was serial, or one bit at a time. For every seven bits, an eighth parity bit was added for error checking. These basically worked like a very simple checksum\u2014in this case we can even do the math in our heads. Communications via modem were set to either \u201ceven\u201d or \u201codd\u201d parity, which meant that for every 8 bits there must be an even or odd number of ones in the data. If it did not match, then it was assumed there was an error, and a request was made by the receiving computer for retransmission.<\/p>\n<p>The parity bit is sent first in a group of eight bits, and its value must make the total number of ones in the byte odd. In the example above, you can see that the values are 5, 5, 3, 5, and 1 when the ones are tallied. This first bit is not counted as the primary data, it is used for error-checking and discarded, just like the checksum on the end of a data file. If a computer set to odd parity received 8 bits with an even number of ones, it would assume it was an error. Of course, if two bits happened to flip during transmission it could still pass parity. The assumption here is that the most common error is losing one bit in an 8-bit sequence. This also does not account for the possibility that the parity bit itself is corrupted, but this was used as a basic method of error-checking for many years in telecommunications.<\/p>\n<h3>Redundancy Check<\/h3>\n<p>A more advanced type of error-detection is the Cyclic Redundancy Check, or CRC. It works with a similar principle to the checksum. A block of data is processed through a mathematical algorithm and a result is appended to the data. After the data is sent, a calculation is repeated to check the integrity. The CRC can be applied to any length of binary data and will always return a code of the exact same length. This makes CRC a \u201chashing\u201d algorithm, one that returns a value of consistent length in digits.<\/p>\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-7829400583245190\"\r\n     data-ad-slot=\"7226953054\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3>TCP\/IP Error Detection and Correction<\/h3>\n<p>The main protocol, or set of rules, for internet communication is TCP\/IP. This network standard has several layers of protection for data corruption. The first one is one we\u2019re already familiar with: the checksum.<\/p>\n<p>TCP\/IP divides data into pieces to be sent over a network into segments or datagrams. These segments have a \u201cheader\u201d at the beginning which defines the sending computer, the receiving computer, transmission settings, and also a 16-bit checksum to verify the data. The maximum size of this segment is 65,536 bytes (Stevens, 2004.) When each segment arrives at the destination computer it is checked against the checksum value; if the values don\u2019t match, a retransmit request is sent to the source computer.<\/p>\n<p>Along with a checksum, TCP\/IP also checks for transmission errors on other levels. The receiving computer must also send an acknowledgement (ACK) for each datagram received. This is accomplished by giving each datagram a sequence number in the header. The recipient machine sends an ACK for each sequence number\u2014if one of the numbers is not acknowledged after a certain period of time, the source computer will retransmit.<\/p>\n<p>At another level, TCP\/IP will also detect broken routes over the network and re-route to new ones. This is one reason why TCP\/IP has been used for decades on the internet: it is fault-tolerant. Part of the network can stop working without taking the entire network offline. Routers and devices that stop forwarding network traffic can be worked around by checking for alternate routes to the destination.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Data Types Files, or large blocks of data, need to have context. On a more granular level, individual units of data must also have context. When we work with a data point, it must be defined to the computer as a number, a character, a memory location, or something else. For instance, a Word document [&hellip;]<\/p>\n","protected":false},"author":4,"featured_media":2267,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"categories":[66],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v18.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Information Representation (Part 2) | Computer Science | JJ<\/title>\n<meta name=\"description\" content=\"about the binary numbering system and how to convert decimal to binary.about data storage sizes, such as kilobyte, megabyte, and terabyte.how graphics, documents, music, and other data are represented in memory.about the different data types used in programming such as char, string, int, and float.how computers perform error checking on stored and network data.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/jacekjeznach.com\/information-representation-part-2\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Information Representation (Part 2) | Computer Science | JJ\" \/>\n<meta property=\"og:description\" content=\"about the binary numbering system and how to convert decimal to binary.about data storage sizes, such as kilobyte, megabyte, and terabyte.how graphics, documents, music, and other data are represented in memory.about the different data types used in programming such as char, string, int, and float.how computers perform error checking on stored and network data.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/jacekjeznach.com\/information-representation-part-2\/\" \/>\n<meta property=\"og:site_name\" content=\"JJ\" \/>\n<meta property=\"article:published_time\" content=\"2021-10-03T13:34:39+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-02-01T12:23:17+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/binary-code-4512291.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"2048\" \/>\n\t<meta property=\"og:image:height\" content=\"1367\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/jpeg\" \/>\n<meta name=\"twitter:card\" content=\"summary\" \/>\n<meta name=\"twitter:creator\" content=\"@JeznachJacek\" \/>\n<meta name=\"twitter:site\" content=\"@JeznachJacek\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Jacek Jeznach\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"12 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/jacekjeznach.com\/#website\",\"url\":\"https:\/\/jacekjeznach.com\/\",\"name\":\"JJ\",\"description\":\"Hire Professional  WordPress Expert - providing multiple services including website maintenance and interactive solutions\",\"publisher\":{\"@id\":\"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/jacekjeznach.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/jacekjeznach.com\/information-representation-part-2\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/binary-code-4512291.jpg\",\"contentUrl\":\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/binary-code-4512291.jpg\",\"width\":2048,\"height\":1367},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/jacekjeznach.com\/information-representation-part-2\/#webpage\",\"url\":\"https:\/\/jacekjeznach.com\/information-representation-part-2\/\",\"name\":\"Information Representation (Part 2) | Computer Science | JJ\",\"isPartOf\":{\"@id\":\"https:\/\/jacekjeznach.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/jacekjeznach.com\/information-representation-part-2\/#primaryimage\"},\"datePublished\":\"2021-10-03T13:34:39+00:00\",\"dateModified\":\"2022-02-01T12:23:17+00:00\",\"description\":\"about the binary numbering system and how to convert decimal to binary.about data storage sizes, such as kilobyte, megabyte, and terabyte.how graphics, documents, music, and other data are represented in memory.about the different data types used in programming such as char, string, int, and float.how computers perform error checking on stored and network data.\",\"breadcrumb\":{\"@id\":\"https:\/\/jacekjeznach.com\/information-representation-part-2\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/jacekjeznach.com\/information-representation-part-2\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/jacekjeznach.com\/information-representation-part-2\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/jacekjeznach.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Information Representation (Part 2)\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/jacekjeznach.com\/information-representation-part-2\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/jacekjeznach.com\/information-representation-part-2\/#webpage\"},\"author\":{\"@id\":\"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e\"},\"headline\":\"Information Representation (Part 2)\",\"datePublished\":\"2021-10-03T13:34:39+00:00\",\"dateModified\":\"2022-02-01T12:23:17+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/jacekjeznach.com\/information-representation-part-2\/#webpage\"},\"wordCount\":2514,\"publisher\":{\"@id\":\"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e\"},\"image\":{\"@id\":\"https:\/\/jacekjeznach.com\/information-representation-part-2\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/binary-code-4512291.jpg\",\"articleSection\":[\"Computer Science\"],\"inLanguage\":\"en-US\"},{\"@type\":[\"Person\",\"Organization\"],\"@id\":\"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e\",\"name\":\"Jacek Jeznach\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/jacekjeznach.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/dc947f87f7bb9ca215513aa49e41203f?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/dc947f87f7bb9ca215513aa49e41203f?s=96&d=mm&r=g\",\"caption\":\"Jacek Jeznach\"},\"logo\":{\"@id\":\"https:\/\/jacekjeznach.com\/#personlogo\"},\"url\":\"https:\/\/jacekjeznach.com\/author\/jeznacki1234\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Information Representation (Part 2) | Computer Science | JJ","description":"about the binary numbering system and how to convert decimal to binary.about data storage sizes, such as kilobyte, megabyte, and terabyte.how graphics, documents, music, and other data are represented in memory.about the different data types used in programming such as char, string, int, and float.how computers perform error checking on stored and network data.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/jacekjeznach.com\/information-representation-part-2\/","og_locale":"en_US","og_type":"article","og_title":"Information Representation (Part 2) | Computer Science | JJ","og_description":"about the binary numbering system and how to convert decimal to binary.about data storage sizes, such as kilobyte, megabyte, and terabyte.how graphics, documents, music, and other data are represented in memory.about the different data types used in programming such as char, string, int, and float.how computers perform error checking on stored and network data.","og_url":"https:\/\/jacekjeznach.com\/information-representation-part-2\/","og_site_name":"JJ","article_published_time":"2021-10-03T13:34:39+00:00","article_modified_time":"2022-02-01T12:23:17+00:00","og_image":[{"width":2048,"height":1367,"url":"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/binary-code-4512291.jpg","type":"image\/jpeg"}],"twitter_card":"summary","twitter_creator":"@JeznachJacek","twitter_site":"@JeznachJacek","twitter_misc":{"Written by":"Jacek Jeznach","Est. reading time":"12 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/jacekjeznach.com\/#website","url":"https:\/\/jacekjeznach.com\/","name":"JJ","description":"Hire Professional  WordPress Expert - providing multiple services including website maintenance and interactive solutions","publisher":{"@id":"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/jacekjeznach.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/jacekjeznach.com\/information-representation-part-2\/#primaryimage","inLanguage":"en-US","url":"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/binary-code-4512291.jpg","contentUrl":"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/binary-code-4512291.jpg","width":2048,"height":1367},{"@type":"WebPage","@id":"https:\/\/jacekjeznach.com\/information-representation-part-2\/#webpage","url":"https:\/\/jacekjeznach.com\/information-representation-part-2\/","name":"Information Representation (Part 2) | Computer Science | JJ","isPartOf":{"@id":"https:\/\/jacekjeznach.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/jacekjeznach.com\/information-representation-part-2\/#primaryimage"},"datePublished":"2021-10-03T13:34:39+00:00","dateModified":"2022-02-01T12:23:17+00:00","description":"about the binary numbering system and how to convert decimal to binary.about data storage sizes, such as kilobyte, megabyte, and terabyte.how graphics, documents, music, and other data are represented in memory.about the different data types used in programming such as char, string, int, and float.how computers perform error checking on stored and network data.","breadcrumb":{"@id":"https:\/\/jacekjeznach.com\/information-representation-part-2\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/jacekjeznach.com\/information-representation-part-2\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/jacekjeznach.com\/information-representation-part-2\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/jacekjeznach.com\/"},{"@type":"ListItem","position":2,"name":"Information Representation (Part 2)"}]},{"@type":"Article","@id":"https:\/\/jacekjeznach.com\/information-representation-part-2\/#article","isPartOf":{"@id":"https:\/\/jacekjeznach.com\/information-representation-part-2\/#webpage"},"author":{"@id":"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e"},"headline":"Information Representation (Part 2)","datePublished":"2021-10-03T13:34:39+00:00","dateModified":"2022-02-01T12:23:17+00:00","mainEntityOfPage":{"@id":"https:\/\/jacekjeznach.com\/information-representation-part-2\/#webpage"},"wordCount":2514,"publisher":{"@id":"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e"},"image":{"@id":"https:\/\/jacekjeznach.com\/information-representation-part-2\/#primaryimage"},"thumbnailUrl":"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/binary-code-4512291.jpg","articleSection":["Computer Science"],"inLanguage":"en-US"},{"@type":["Person","Organization"],"@id":"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e","name":"Jacek Jeznach","image":{"@type":"ImageObject","@id":"https:\/\/jacekjeznach.com\/#personlogo","inLanguage":"en-US","url":"https:\/\/secure.gravatar.com\/avatar\/dc947f87f7bb9ca215513aa49e41203f?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/dc947f87f7bb9ca215513aa49e41203f?s=96&d=mm&r=g","caption":"Jacek Jeznach"},"logo":{"@id":"https:\/\/jacekjeznach.com\/#personlogo"},"url":"https:\/\/jacekjeznach.com\/author\/jeznacki1234\/"}]}},"_links":{"self":[{"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/posts\/2341"}],"collection":[{"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/users\/4"}],"replies":[{"embeddable":true,"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/comments?post=2341"}],"version-history":[{"count":9,"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/posts\/2341\/revisions"}],"predecessor-version":[{"id":2344,"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/posts\/2341\/revisions\/2344"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/media\/2267"}],"wp:attachment":[{"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/media?parent=2341"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/categories?post=2341"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/tags?post=2341"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}