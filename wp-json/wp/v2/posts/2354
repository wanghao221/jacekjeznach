{"id":2354,"date":"2022-01-03T18:44:51","date_gmt":"2022-01-03T18:44:51","guid":{"rendered":"https:\/\/jacekjeznach.com\/?p=2354"},"modified":"2022-04-20T08:42:41","modified_gmt":"2022-04-20T08:42:41","slug":"algorithms-and-data-structures-part-1","status":"publish","type":"post","link":"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/","title":{"rendered":"Algorithms and Data Structures (Part 1)"},"content":{"rendered":"<p>For the last <strong>20 years, Google<\/strong> has been the main search engine used on the internet, accounting for over<strong> 90 percent<\/strong> of the market share internationally. (StatCounter.com, 2020.) But how does it work? A Google search works by a set of rules called an <strong>algorithm<\/strong>.<\/p>\n<p>An <strong>algorithm<\/strong> is a set of rules or instructions for completing a task. This applies to human beings as well as computers. The vast amount of data that is available on the internet poses a challenge to anyone who would want to search through it. Google has established a method to search through this data with excellent results.<\/p>\n<p><strong>According to Google<\/strong>, there are actually <strong>several algorithms working together<\/strong> to achieve the results for an internet search. One of these is used to determine meaning: Google can substitute synonyms for words in its search such as \u201c<strong>move<\/strong>\u201d and \u201c<strong>relocate<\/strong>\u201d to find similar matches. Another algorithm is used to<strong> analyze relevance<\/strong>. The keywords typed in the search are matched to the page\u2014<strong>the better the match, the higher the search results<\/strong>. The search algorithms for Google also incorporate a quality assessment of the website itself in terms of expertise, authoritativeness, and trustworthiness on a given topic (Google, n.d.).<\/p>\n<p>This seems like a good start, but the algorithms go even further. The page will also be ranked for \u201c<strong>usability<\/strong>,\u201d which means how well the page displays in different browsers and how quickly the pages load. Finally, the algorithm includes personal information about the user that is searching. If that user lives in Barcelona and searches for \u201cf\u00fatbol,\u201d Google will prioritize local teams and FC Barcelona would be a higher result compared to results for someone in Berlin.<\/p>\n<p>Of course, <strong>the exact details of Google\u2019s algorithms are secret<\/strong>, like the secret spice recipe for Kentucky Fried Chicken. It is, after all, the most popular search engine in the world, and Google would not want anyone stealing their market share by implementing the same algorithms.<\/p>\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-7829400583245190\"\r\n     data-ad-slot=\"7226953054\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>Is the algorithm perfect? No. New sites take a while to start to appear in search results. There is also a chance that a good site match for a particular search does not come up in the first page of searches. However, it is a good enough algorithm that it is the top choice of most web searchers around the world.<\/p>\n<p>Often in data processing, there will be a data space that is extensively large, like the internet, that poses a challenge. Certain mathematical problems also have a vast number of solutions and can be difficult to manage. Often, it is impossible even for a computer to search through every possibility (at least, if quick results are desired) and an algorithm will be designed to give a \u201cgood\u201d result quickly instead of a \u201cperfect\u201d result that takes much longer.<\/p>\n<h2>Algorithms and Flowcharts<\/h2>\n<p>An algorithm at its most simple definition i<strong>s a set of instructions<\/strong>. This works for computing applications as well as human beings. Let\u2019s say that you want to tell someone how to fix a broken lamp. You\u2019d probably ask the usual questions like, \u201cIs it plugged in?\u201d and \u201cDid you replace the light bulb?\u201d However, to put these into a set of instructions, you\u2019d have to organize things a bit more. You\u2019d do something like this:<\/p>\n<ol>\n<li>Check to see if the lamp is plugged in. If it isn\u2019t, plug it in. If it works, you\u2019re done. If not, <strong>go to step 2.<\/strong><\/li>\n<li>Check the lightbulb. Is it burned out? If so, replace it. If it works, you\u2019re done. If not, <strong>go to step 3.<\/strong><\/li>\n<li>The lamp is broken. Buy a new lamp.<\/li>\n<\/ol>\n<p>This is a perfect example of an algorithm. Computer algorithms are especially useful for solving recurrent problems.<\/p>\n<h3>Flowcharts (Flow Diagrams)<\/h3>\n<p>To translate human instructions into computer instructions, coders have used flowcharts for many years. These charts make it easy to observe the structure of an algorithm and create it with a programming language. They use standard symbols to indicate different types of instructions, as shown below.<\/p>\n<p><a href=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/IU-Learn-6.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-2356 size-full\" src=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/IU-Learn-6.png\" alt=\"\" width=\"1553\" height=\"275\" srcset=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/IU-Learn-6.png 1553w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/IU-Learn-6-350x62.png 350w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/IU-Learn-6-700x124.png 700w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/IU-Learn-6-768x136.png 768w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/IU-Learn-6-1536x272.png 1536w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/IU-Learn-6-120x21.png 120w\" sizes=\"(max-width: 1553px) 100vw, 1553px\" \/><\/a><\/p>\n<p class=\"p\">A terminator symbol (oval or rectangle) is used at the beginning of a flowchart and at all the endings. They represent the external nodes of flowcharts. A rectangle represents a process, for instance, some type of data calculation or filtering. The diamond is a decision\u2014a decision has multiple pathways that can be taken. A parallelogram in a flow chart represents input or output, where data are sent into or out of the process. Finally, the arrows represent the flow from beginning to end of the sequence.<\/p>\n<p class=\"p\">There are many other symbols that can be used in a flowchart, but these will suffice for now. If we return to our example about fixing a lamp, we can use a flowchart to illustrate that process.<\/p>\n<p><a href=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/gsdfgs.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-2358 size-full\" src=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/gsdfgs.png\" alt=\"\" width=\"1463\" height=\"768\" srcset=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/gsdfgs.png 1463w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/gsdfgs-350x184.png 350w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/gsdfgs-700x367.png 700w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/gsdfgs-768x403.png 768w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/gsdfgs-120x63.png 120w\" sizes=\"(max-width: 1463px) 100vw, 1463px\" \/><\/a><\/p>\n<p class=\"p\">The flow starts at the beginning; from there we just follow the arrows along the pathway chosen. You can see that the beginning is a terminator with our starting point: \u201cLamp doesn\u2019t work.\u201d From there we go to a decision asking if the lamp is plugged in. There are \u201cyes\u201d or \u201cno\u201d options here. These represent binary thinking in computers where a \u201cyes\u201d can be symbolized by a one and a \u201cno\u201d by a zero.<\/p>\n<p class=\"p\">Let\u2019s take a look at a computer-based example of a flowchart. For this example, we will use a simple key code door lock. The lock works like this: the user has three attempts to enter the correct four-digit code to unlock the door; if they fail three times, the door will be locked for ten minutes and will not take any more input.<\/p>\n<p><a href=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_eb2d5d9f6670073775fe84b491710c9f9d2247622c6c198e34a75a2bcbe6b11a-e1641235756305.jpg\"><img loading=\"lazy\" class=\"aligncenter wp-image-2361 size-full\" src=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_eb2d5d9f6670073775fe84b491710c9f9d2247622c6c198e34a75a2bcbe6b11a-e1641235756305.jpg\" alt=\"\" width=\"1500\" height=\"1109\" srcset=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_eb2d5d9f6670073775fe84b491710c9f9d2247622c6c198e34a75a2bcbe6b11a-e1641235756305.jpg 1500w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_eb2d5d9f6670073775fe84b491710c9f9d2247622c6c198e34a75a2bcbe6b11a-e1641235756305-350x259.jpg 350w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_eb2d5d9f6670073775fe84b491710c9f9d2247622c6c198e34a75a2bcbe6b11a-e1641235756305-700x518.jpg 700w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_eb2d5d9f6670073775fe84b491710c9f9d2247622c6c198e34a75a2bcbe6b11a-e1641235756305-768x568.jpg 768w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_eb2d5d9f6670073775fe84b491710c9f9d2247622c6c198e34a75a2bcbe6b11a-e1641235756305-120x89.jpg 120w\" sizes=\"(max-width: 1500px) 100vw, 1500px\" \/><\/a><\/p>\n<p>This illustrates the algorithm for our door lock. At the beginning, when the lock is activated we move from start to the processing step. This is where the counter variable, attempts, is set to zero. Then the input step shows that the four-digit code is entered by the user. Then a decision is made: is the four-digit code correct? If so, the door is unlocked. So far, so good. If it\u2019s not correct, what happens next? It flows to the next decision. To a human, we would ask the question, \u201cIs this the third failed attempt?\u201d However, a computer is different. We have to use the variable \u201cattempts\u201d to count them. We check the value of attempts to see if it is \u201c3.\u201d If it is, then the user is out of attempts and the door will lock for ten minutes. If they haven\u2019t reached three, the flow will loop back to where they enter the code again. Notice that every time they enter the code, the counter is incremented by one. This flowchart, which represents an algorithm, can be used as a guide to create programming instructions for a computer.<\/p>\n<h2>Simple Data Structures<\/h2>\n<p>Data are often entered into a computer sequentially, meaning in a specific order. Think of this process as similar to what you are doing now; you are reading letters and words in sequence. Simple data types such as \u201cinteger\u201d and \u201cchar\u201d will store one unit of information, but to store them in a sequence they must be arranged in a series. There are different ways to do this in computer memory and each has its advantages and drawbacks.<\/p>\n<h3>Stacks<\/h3>\n<p>A stack is a data structure that works under a specific philosophy: Last In, First Out. This is often abbreviated as LIFO. Imagine you are inputting data to a computer program\u2014in this case, we will say it is a card game simulator. It will use a standard deck of 52 cards, and they will be randomized and placed into the stack.<\/p>\n<p>Just like in real life, when you are playing cards, you can only draw the card from the top of the deck. That is the last card that was placed on top, so it is the last in, but the first out. Once the game is started, the order cannot be changed, the next card in play is always the one on top of the deck\u2014or in our simulation, the stack.<\/p>\n<p>A stack in computer programming allows for two basic operations: push and pop. Pop will take the top piece of data from the stack, which removes it. Push will add a new item to the top (and only the top) of the stack.<\/p>\n<p><a href=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_7ad681c2aa55e6798ec5cab6f3a58500aea633c4392a90d5e2a149bb8b4ca1f5-e1641235814428.jpg\"><img loading=\"lazy\" class=\"aligncenter wp-image-2362 size-full\" src=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_7ad681c2aa55e6798ec5cab6f3a58500aea633c4392a90d5e2a149bb8b4ca1f5-e1641235814428.jpg\" alt=\"\" width=\"1500\" height=\"1046\" srcset=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_7ad681c2aa55e6798ec5cab6f3a58500aea633c4392a90d5e2a149bb8b4ca1f5-e1641235814428.jpg 1500w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_7ad681c2aa55e6798ec5cab6f3a58500aea633c4392a90d5e2a149bb8b4ca1f5-e1641235814428-350x244.jpg 350w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_7ad681c2aa55e6798ec5cab6f3a58500aea633c4392a90d5e2a149bb8b4ca1f5-e1641235814428-700x488.jpg 700w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_7ad681c2aa55e6798ec5cab6f3a58500aea633c4392a90d5e2a149bb8b4ca1f5-e1641235814428-768x536.jpg 768w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_7ad681c2aa55e6798ec5cab6f3a58500aea633c4392a90d5e2a149bb8b4ca1f5-e1641235814428-120x84.jpg 120w\" sizes=\"(max-width: 1500px) 100vw, 1500px\" \/><\/a><\/p>\n<p class=\"p\">To populate the stack with data, we use the push operator, one element at a time. Once all of the data has been entered, it is read by using the pop operator. Note that the pop operation returns the value of the element and removes it from the stack. This is a very simple and efficient way to store data. Pushes and pops can be performed at any time to add or remove elements from the top of the stack. This structure has the advantage of taking up less space than more complicated data structures\u2014however, it cannot be searched randomly.<\/p>\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-7829400583245190\"\r\n     data-ad-slot=\"9851625702\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\r\n\n<p class=\"p\">RAM is called \u201cRandom Access Memory\u201d because any part of it can be accessed at any time. This might seem obvious, but initially computer storage was only accessible in a sequence. This means that any time you wanted to read some data, you had to start at the very beginning until you got to the part you wanted. This is similar to reading a book. Last night you were on page 77 in the book. The next day you wanted to read it you\u2019d have to start at page 1 and read your way all the way back to 77. Obviously, this isn\u2019t very efficient. Random access means you can jump right to whatever page you want, in this case page 77. You could also skip ahead even to parts you haven\u2019t read yet, if you wanted.\u00a0<span class=\"clickable has-background\" data-v-059d68cc=\"\">Stack data structures can only be accessed sequentially, not randomly. Not only that, but the sequence is LIFO, giving you the last element first (imagine reading a book backwards!). There are times that this order might be useful (such as our deck of cards example) and times when it is not. Stacks are used because they take up less memory that other data structures. Basically this means that when you can use a stack for your purposes, you should.<\/span><\/p>\n<h3>Linked Lists<\/h3>\n<p>A linked list is also a sequential data storage structure. Instead of being stored in a simple stack of data, each element is linked to the next. In other words, an element in the data structure linked list contains two pieces of information, the data and the link.<\/p>\n<p><a href=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_3eb78fbb6b7e6d5f60a49a461ad84fdfb05efc9afe18f482528c85bd5ec1cc4c-e1641235907479.jpg\"><img loading=\"lazy\" class=\"aligncenter wp-image-2364 size-full\" src=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_3eb78fbb6b7e6d5f60a49a461ad84fdfb05efc9afe18f482528c85bd5ec1cc4c-e1641235907479.jpg\" alt=\"\" width=\"1500\" height=\"1057\" srcset=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_3eb78fbb6b7e6d5f60a49a461ad84fdfb05efc9afe18f482528c85bd5ec1cc4c-e1641235907479.jpg 1500w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_3eb78fbb6b7e6d5f60a49a461ad84fdfb05efc9afe18f482528c85bd5ec1cc4c-e1641235907479-350x247.jpg 350w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_3eb78fbb6b7e6d5f60a49a461ad84fdfb05efc9afe18f482528c85bd5ec1cc4c-e1641235907479-700x493.jpg 700w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_3eb78fbb6b7e6d5f60a49a461ad84fdfb05efc9afe18f482528c85bd5ec1cc4c-e1641235907479-768x541.jpg 768w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_3eb78fbb6b7e6d5f60a49a461ad84fdfb05efc9afe18f482528c85bd5ec1cc4c-e1641235907479-120x85.jpg 120w\" sizes=\"(max-width: 1500px) 100vw, 1500px\" \/><\/a><\/p>\n<p>The last element in the linked list structure does not have a pointer to the next value, instead it points to null, which indicates that there are no more elements. Null is often used to end a series of data. The link in each list is a pointer, which is a memory location. It identifies the part of memory that contains the next element.<\/p>\n<p>In many computer implementations, a linked list is unbounded. This means that there is not a specific number of elements that it is restricted to. (Of course, the size would have an upper limit based on the computer memory or the programming language structure.) This is useful when you are working with a series of data that you do not know the length of, including one that has a continually changing length.<\/p>\n<p>One thing that linked lists can do that stacks cannot is insert data into the middle of the sequence. If you imagine the linked list as a chain, the chain could be temporarily broken and have a new link inserted, making it whole again. To do this with the data, we can simply change the pointers to include the new element.<\/p>\n<p>Let\u2019s say you have a linked list of integers.<\/p>\n<p><a href=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_d6d8dc4c8c9839565d9675186f9932a332ccfb1711da07b0d9f4fd7f0536bbce-e1641235934955.jpg\"><img loading=\"lazy\" class=\"aligncenter wp-image-2365 size-full\" src=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_d6d8dc4c8c9839565d9675186f9932a332ccfb1711da07b0d9f4fd7f0536bbce-e1641235934955.jpg\" alt=\"\" width=\"1500\" height=\"427\" srcset=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_d6d8dc4c8c9839565d9675186f9932a332ccfb1711da07b0d9f4fd7f0536bbce-e1641235934955.jpg 1500w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_d6d8dc4c8c9839565d9675186f9932a332ccfb1711da07b0d9f4fd7f0536bbce-e1641235934955-350x100.jpg 350w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_d6d8dc4c8c9839565d9675186f9932a332ccfb1711da07b0d9f4fd7f0536bbce-e1641235934955-700x199.jpg 700w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_d6d8dc4c8c9839565d9675186f9932a332ccfb1711da07b0d9f4fd7f0536bbce-e1641235934955-768x219.jpg 768w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_d6d8dc4c8c9839565d9675186f9932a332ccfb1711da07b0d9f4fd7f0536bbce-e1641235934955-120x34.jpg 120w\" sizes=\"(max-width: 1500px) 100vw, 1500px\" \/><\/a><\/p>\n<p>he list is comprised of the elements 83, 23, 12, 99, 52, and 94. That means that the element containing the 12 also points to the next one containing 99. If we wanted to insert a new node with 37 (a link in the chain) into the list, we would simply have 12 point to 37, and then 37 point to 99 and now we once again have an unbroken chain.<\/p>\n<p>Linked lists work well if you need speedy access to sequential data with the ability to insert new data into any part of the list.<\/p>\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-7829400583245190\"\r\n     data-ad-slot=\"9999429353\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3>Arrays<\/h3>\n<p>One of the most useful and common data structures is the array. Though it takes up more memory than a stack, for instance, it provides random access for reading and writing data. Usually, when arrays are declared in a programming language, they are \u201cbounded,\u201d meaning that they have a set size. Linked lists offer similar functionality with an unbounded size. However, linked lists do not allow random access to elements. This means that, while arrays are more costly in size, they offer the most functionality of the sequential data structures.<\/p>\n<p>The data in an array is arranged in elements, just like our other sequential types. However, each element in the array is given a specific index\u2014a number that identifies it. The index is ordinal and starts at zero (in most programming languages.) This means that the first element is element zero. It may take a while to remember that computers start counting at zero, but there\u2019s a good reason for it. When you are working with small amounts of data and fail to use zero as a counter, you are basically wasting that piece of memory. So, to be more efficient, zero is used as the first number when counting.<\/p>\n<p>Let\u2019s say you were going to store a list of customer names in an array. It would look something like this:<\/p>\n<p><a href=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_6cf0cb2e2ae4c8aacd80ba42bf0a5d4340ec97e6b82ede3d3a6ee065e3ef73fe-e1641236018603.jpg\"><img loading=\"lazy\" class=\"alignnone wp-image-2367 size-full\" src=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_6cf0cb2e2ae4c8aacd80ba42bf0a5d4340ec97e6b82ede3d3a6ee065e3ef73fe-e1641236018603.jpg\" alt=\"\" width=\"1500\" height=\"281\" srcset=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_6cf0cb2e2ae4c8aacd80ba42bf0a5d4340ec97e6b82ede3d3a6ee065e3ef73fe-e1641236018603.jpg 1500w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_6cf0cb2e2ae4c8aacd80ba42bf0a5d4340ec97e6b82ede3d3a6ee065e3ef73fe-e1641236018603-350x66.jpg 350w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_6cf0cb2e2ae4c8aacd80ba42bf0a5d4340ec97e6b82ede3d3a6ee065e3ef73fe-e1641236018603-700x131.jpg 700w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_6cf0cb2e2ae4c8aacd80ba42bf0a5d4340ec97e6b82ede3d3a6ee065e3ef73fe-e1641236018603-768x144.jpg 768w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_6cf0cb2e2ae4c8aacd80ba42bf0a5d4340ec97e6b82ede3d3a6ee065e3ef73fe-e1641236018603-120x22.jpg 120w\" sizes=\"(max-width: 1500px) 100vw, 1500px\" \/><\/a><\/p>\n<p>The array name is CustomerName, which will hold all of the elements. The first element is element zero [0] in the list. The number after the array name is called the index. The value stored in element zero is \u201cSandra Whitehall.\u201d The advantage of this array is that you can access any element immediately. If you want to read or write to element 3 (the fourth element), you can go directly to it without having to read 0, 1, and 2 first.<\/p>\n<h3>Multi-Dimensional Arrays<\/h3>\n<p>Another advantage of arrays is that they can be multi-dimensional. If you think of a list of items, for instance, you think of a linear progression from start to end\u2014a line, or one dimension. Adding a second dimension means that the list can be read in two directions. One way to imagine this is to think of a checkerboard. A standard checkerboard is 8 by 8 squares, giving us a total of 64. If you are playing checkers, the squares can have three possibilities for their contents: a red checker, a black checker, or no checker. Let\u2019s store these as RED, BLACK, and NULL.<\/p>\n<p><a href=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_308b4656977de6f594eb2fa4065f8f62b318ecbc0c78e46ff508320f463cd2d6-e1641236046561.jpg\"><img loading=\"lazy\" class=\"aligncenter wp-image-2368 size-full\" src=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_308b4656977de6f594eb2fa4065f8f62b318ecbc0c78e46ff508320f463cd2d6-e1641236046561.jpg\" alt=\"\" width=\"1500\" height=\"930\" srcset=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_308b4656977de6f594eb2fa4065f8f62b318ecbc0c78e46ff508320f463cd2d6-e1641236046561.jpg 1500w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_308b4656977de6f594eb2fa4065f8f62b318ecbc0c78e46ff508320f463cd2d6-e1641236046561-350x217.jpg 350w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_308b4656977de6f594eb2fa4065f8f62b318ecbc0c78e46ff508320f463cd2d6-e1641236046561-700x434.jpg 700w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_308b4656977de6f594eb2fa4065f8f62b318ecbc0c78e46ff508320f463cd2d6-e1641236046561-768x476.jpg 768w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_308b4656977de6f594eb2fa4065f8f62b318ecbc0c78e46ff508320f463cd2d6-e1641236046561-120x74.jpg 120w\" sizes=\"(max-width: 1500px) 100vw, 1500px\" \/><\/a><\/p>\n<p>The top left square is the first one at 0,0\u2014remember computers start counting at zero. This means there is a row zero and a column zero on the board. This array references the squares similar to coordinates. The square at 3,5 for example means column 4, row 6 (remember to think like a computer!). Let\u2019s say we simply called this array \u201ccheckerBoard.\u201d If a red checker was in square 3,5, we could say:<\/p>\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">checkerBoard[3,5] = \u201cRED\u201d<\/pre>\n<p>We could store information for the entire checkerboard using this array, where every square would have RED, BLACK, or NULL stored in it as data. Then we could implement algorithms to move the checker on the board.<\/p>\n<p>There are two types of moves, a regular move and a \u201ccapture\u201d where you take one piece (or more) of your opponent\u2019s. The checkers must only be on the black squares and therefore must move diagonally. If we have a red checker on 3,5, and we are facing the opponent (we are on the bottom of the board), then the valid regular moves are to go to 4,4 or 2,4. The algorithm would look something like this:<\/p>\n<p>Regular move<\/p>\n<ol>\n<li>Player inputs move choice.<\/li>\n<li>Can you move right?<\/li>\n<li>Move right is +1 X and -1 Y (Where X and Y are array indices.)<\/li>\n<li>Can you move left?<\/li>\n<li>Move left is -1 X and -1 Y<\/li>\n<\/ol>\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-7829400583245190\"\r\n     data-ad-slot=\"7226953054\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>You would have to test if you could move by checking to see if you are at the edge of the board, and also check whether there was an opposing piece in the way. In other words, if the destination number for X or Y is larger than 7 or less than 0 you are not on the board. If the space you want to move into contains a NULL, it is fine, but if it contains a RED or BLACK piece, you cannot move there.<\/p>\n<p><a href=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_0b937342aaa06138934a76212b9aac17ab542cfe8857f2e6ed2a58f547e174b6-e1641236157488.jpg\"><img loading=\"lazy\" class=\"aligncenter wp-image-2369 size-full\" src=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_0b937342aaa06138934a76212b9aac17ab542cfe8857f2e6ed2a58f547e174b6-e1641236157488.jpg\" alt=\"\" width=\"1500\" height=\"1143\" srcset=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_0b937342aaa06138934a76212b9aac17ab542cfe8857f2e6ed2a58f547e174b6-e1641236157488.jpg 1500w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_0b937342aaa06138934a76212b9aac17ab542cfe8857f2e6ed2a58f547e174b6-e1641236157488-350x267.jpg 350w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_0b937342aaa06138934a76212b9aac17ab542cfe8857f2e6ed2a58f547e174b6-e1641236157488-700x533.jpg 700w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_0b937342aaa06138934a76212b9aac17ab542cfe8857f2e6ed2a58f547e174b6-e1641236157488-768x585.jpg 768w, https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/relative_0b937342aaa06138934a76212b9aac17ab542cfe8857f2e6ed2a58f547e174b6-e1641236157488-120x91.jpg 120w\" sizes=\"(max-width: 1500px) 100vw, 1500px\" \/><\/a><\/p>\n<p>Of course, this would just be an algorithm for using a regular move on one piece. There would be a larger algorithm for what happens during a player\u2019s turn, for example, which would include the rules for both a regular move and a capture move. Arrays make it easy to map out coordinates in two or three-dimensional space, like with checkers on a board.<\/p>\n<h4>More dimensions in arrays<\/h4>\n<p>There is no need to stop after only two dimensions, but keep in mind that for every dimension you add, you are raising the complexity of the data by an exponent. For instance, our checkerboard takes up 8 x 8 elements of space, for 82 or 64. If we made it a three-dimensional cube, 8 x 8 x 8, it would be 83 or 512 elements. As a<\/p>\n<div data-v-5a67669e=\"\" data-v-6ded7b0a=\"\">\n<div data-v-6ded7b0a=\"\">\n<section class=\"section\" data-v-fbef277c=\"\">\n<div data-v-fbef277c=\"\">\n<p class=\"p\">There is no need to stop after only two dimensions, but keep in mind that for every dimension you add, you are raising the complexity of the data by an exponent. For instance, our checkerboard takes up 8 x 8 elements of space, for 8<sup>2<\/sup>\u00a0or 64. If we made it a three-dimensional cube, 8 x 8 x 8, it would be 8<sup>3\u00a0<\/sup>or 512 elements. As a programmer, you must be careful never to waste precious memory and only use what you need.<\/p>\n<\/div>\n<\/section>\n<\/div>\n<\/div>\n<div id=\"quiz_137f5258-cf95-4d34-8e20-2c558afd8c58\" class=\"quiz-page is-full-height\" data-v-4425ecde=\"\" data-v-5a67669e=\"\" data-v-6ded7b0a=\"\">\n<div class=\"quiz page\" data-v-1c2b8526=\"\">\n<div class=\"grid\" data-v-1c2b8526=\"\" data-state=\"{&quot;isFinished&quot;:false,&quot;score&quot;:0,&quot;link&quot;:{&quot;quizContentUrl&quot;:&quot;https:\/\/idss-assets.iu.org\/assessments\/DLBCSICS01\/001-2021-1210_2021-12-10T15-59-26-241Z\/137f5258-cf95-4d34-8e20-2c558afd8c58.json&quot;,&quot;quizId&quot;:&quot;137f5258-cf95-4d34-8e20-2c558afd8c58&quot;,&quot;referenceId&quot;:&quot;CYCLE_e9be0a4218c685a26db06e5d359791cd&quot;,&quot;filename&quot;:&quot;137f5258-cf95-4d34-8e20-2c558afd8c58.json&quot;,&quot;title&quot;:&quot;3.2 Simple Data Structures&quot;,&quot;courseId&quot;:&quot;DLBCSICS01&quot;,&quot;assessmentType&quot;:&quot;QUIZ&quot;}}\">\n<div class=\"hello\" data-v-1c2b8526=\"\"><\/div>\n<\/div>\n<\/div>\n<\/div>\n<p>&nbsp;<\/p>\n","protected":false},"excerpt":{"rendered":"<p>For the last 20 years, Google has been the main search engine used on the internet, accounting for over 90 percent of the market share internationally. (StatCounter.com, 2020.) But how does it work? A Google search works by a set of rules called an algorithm. An algorithm is a set of rules or instructions for [&hellip;]<\/p>\n","protected":false},"author":4,"featured_media":2267,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"categories":[66],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v18.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Algorithms and Data Structures (Part 1) | Computer Science | JJ<\/title>\n<meta name=\"description\" content=\"how the term algorithm is used in applications of computer science.how to create flowcharts.the details of data structures, such as arrays and stacks.how sorting algorithms work, including quick and bubble sort.how the quality of different algorithms is evaluated.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Algorithms and Data Structures (Part 1) | Computer Science | JJ\" \/>\n<meta property=\"og:description\" content=\"how the term algorithm is used in applications of computer science.how to create flowcharts.the details of data structures, such as arrays and stacks.how sorting algorithms work, including quick and bubble sort.how the quality of different algorithms is evaluated.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/\" \/>\n<meta property=\"og:site_name\" content=\"JJ\" \/>\n<meta property=\"article:published_time\" content=\"2022-01-03T18:44:51+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-04-20T08:42:41+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/binary-code-4512291.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"2048\" \/>\n\t<meta property=\"og:image:height\" content=\"1367\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/jpeg\" \/>\n<meta name=\"twitter:card\" content=\"summary\" \/>\n<meta name=\"twitter:creator\" content=\"@JeznachJacek\" \/>\n<meta name=\"twitter:site\" content=\"@JeznachJacek\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Jacek Jeznach\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"15 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/jacekjeznach.com\/#website\",\"url\":\"https:\/\/jacekjeznach.com\/\",\"name\":\"JJ\",\"description\":\"Hire Professional  WordPress Expert - providing multiple services including website maintenance and interactive solutions\",\"publisher\":{\"@id\":\"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/jacekjeznach.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/binary-code-4512291.jpg\",\"contentUrl\":\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/binary-code-4512291.jpg\",\"width\":2048,\"height\":1367},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/#webpage\",\"url\":\"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/\",\"name\":\"Algorithms and Data Structures (Part 1) | Computer Science | JJ\",\"isPartOf\":{\"@id\":\"https:\/\/jacekjeznach.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/#primaryimage\"},\"datePublished\":\"2022-01-03T18:44:51+00:00\",\"dateModified\":\"2022-04-20T08:42:41+00:00\",\"description\":\"how the term algorithm is used in applications of computer science.how to create flowcharts.the details of data structures, such as arrays and stacks.how sorting algorithms work, including quick and bubble sort.how the quality of different algorithms is evaluated.\",\"breadcrumb\":{\"@id\":\"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/jacekjeznach.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Algorithms and Data Structures (Part 1)\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/#webpage\"},\"author\":{\"@id\":\"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e\"},\"headline\":\"Algorithms and Data Structures (Part 1)\",\"datePublished\":\"2022-01-03T18:44:51+00:00\",\"dateModified\":\"2022-04-20T08:42:41+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/#webpage\"},\"wordCount\":2967,\"publisher\":{\"@id\":\"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e\"},\"image\":{\"@id\":\"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/binary-code-4512291.jpg\",\"articleSection\":[\"Computer Science\"],\"inLanguage\":\"en-US\"},{\"@type\":[\"Person\",\"Organization\"],\"@id\":\"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e\",\"name\":\"Jacek Jeznach\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/jacekjeznach.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/dc947f87f7bb9ca215513aa49e41203f?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/dc947f87f7bb9ca215513aa49e41203f?s=96&d=mm&r=g\",\"caption\":\"Jacek Jeznach\"},\"logo\":{\"@id\":\"https:\/\/jacekjeznach.com\/#personlogo\"},\"url\":\"https:\/\/jacekjeznach.com\/author\/jeznacki1234\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Algorithms and Data Structures (Part 1) | Computer Science | JJ","description":"how the term algorithm is used in applications of computer science.how to create flowcharts.the details of data structures, such as arrays and stacks.how sorting algorithms work, including quick and bubble sort.how the quality of different algorithms is evaluated.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/","og_locale":"en_US","og_type":"article","og_title":"Algorithms and Data Structures (Part 1) | Computer Science | JJ","og_description":"how the term algorithm is used in applications of computer science.how to create flowcharts.the details of data structures, such as arrays and stacks.how sorting algorithms work, including quick and bubble sort.how the quality of different algorithms is evaluated.","og_url":"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/","og_site_name":"JJ","article_published_time":"2022-01-03T18:44:51+00:00","article_modified_time":"2022-04-20T08:42:41+00:00","og_image":[{"width":2048,"height":1367,"url":"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/binary-code-4512291.jpg","type":"image\/jpeg"}],"twitter_card":"summary","twitter_creator":"@JeznachJacek","twitter_site":"@JeznachJacek","twitter_misc":{"Written by":"Jacek Jeznach","Est. reading time":"15 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/jacekjeznach.com\/#website","url":"https:\/\/jacekjeznach.com\/","name":"JJ","description":"Hire Professional  WordPress Expert - providing multiple services including website maintenance and interactive solutions","publisher":{"@id":"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/jacekjeznach.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/#primaryimage","inLanguage":"en-US","url":"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/binary-code-4512291.jpg","contentUrl":"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/binary-code-4512291.jpg","width":2048,"height":1367},{"@type":"WebPage","@id":"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/#webpage","url":"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/","name":"Algorithms and Data Structures (Part 1) | Computer Science | JJ","isPartOf":{"@id":"https:\/\/jacekjeznach.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/#primaryimage"},"datePublished":"2022-01-03T18:44:51+00:00","dateModified":"2022-04-20T08:42:41+00:00","description":"how the term algorithm is used in applications of computer science.how to create flowcharts.the details of data structures, such as arrays and stacks.how sorting algorithms work, including quick and bubble sort.how the quality of different algorithms is evaluated.","breadcrumb":{"@id":"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/jacekjeznach.com\/"},{"@type":"ListItem","position":2,"name":"Algorithms and Data Structures (Part 1)"}]},{"@type":"Article","@id":"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/#article","isPartOf":{"@id":"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/#webpage"},"author":{"@id":"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e"},"headline":"Algorithms and Data Structures (Part 1)","datePublished":"2022-01-03T18:44:51+00:00","dateModified":"2022-04-20T08:42:41+00:00","mainEntityOfPage":{"@id":"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/#webpage"},"wordCount":2967,"publisher":{"@id":"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e"},"image":{"@id":"https:\/\/jacekjeznach.com\/algorithms-and-data-structures-part-1\/#primaryimage"},"thumbnailUrl":"https:\/\/jacekjeznach.com\/wp-content\/uploads\/2022\/01\/binary-code-4512291.jpg","articleSection":["Computer Science"],"inLanguage":"en-US"},{"@type":["Person","Organization"],"@id":"https:\/\/jacekjeznach.com\/#\/schema\/person\/5adfd5bffa0fa377e81b67da26f9730e","name":"Jacek Jeznach","image":{"@type":"ImageObject","@id":"https:\/\/jacekjeznach.com\/#personlogo","inLanguage":"en-US","url":"https:\/\/secure.gravatar.com\/avatar\/dc947f87f7bb9ca215513aa49e41203f?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/dc947f87f7bb9ca215513aa49e41203f?s=96&d=mm&r=g","caption":"Jacek Jeznach"},"logo":{"@id":"https:\/\/jacekjeznach.com\/#personlogo"},"url":"https:\/\/jacekjeznach.com\/author\/jeznacki1234\/"}]}},"_links":{"self":[{"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/posts\/2354"}],"collection":[{"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/users\/4"}],"replies":[{"embeddable":true,"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/comments?post=2354"}],"version-history":[{"count":14,"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/posts\/2354\/revisions"}],"predecessor-version":[{"id":2696,"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/posts\/2354\/revisions\/2696"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/media\/2267"}],"wp:attachment":[{"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/media?parent=2354"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/categories?post=2354"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/jacekjeznach.com\/wp-json\/wp\/v2\/tags?post=2354"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}